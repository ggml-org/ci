+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.565 I build: 3879 (133c7b46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.758 I main: llama backend init
0.00.001.837 I main: load the model and apply lora adapter, if any
0.00.021.970 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.025 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.032 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.037 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.038 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.044 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.047 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.048 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.049 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.049 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.050 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.054 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.055 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.056 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.056 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.057 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.240 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.443 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.226 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.232 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.233 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.233 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.234 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.235 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.235 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.238 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.239 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.240 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.241 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.241 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.245 I llama_model_loader: - type  f32:   37 tensors
0.00.132.247 I llama_model_loader: - type q8_0:  127 tensors
0.00.187.900 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.420 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.138 I llm_load_vocab: special tokens cache size = 5
0.00.224.303 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.316 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.317 I llm_load_print_meta: arch             = gemma
0.00.224.318 I llm_load_print_meta: vocab type       = SPM
0.00.224.318 I llm_load_print_meta: n_vocab          = 256000
0.00.224.319 I llm_load_print_meta: n_merges         = 0
0.00.224.319 I llm_load_print_meta: vocab_only       = 0
0.00.224.319 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.319 I llm_load_print_meta: n_embd           = 2048
0.00.224.320 I llm_load_print_meta: n_layer          = 18
0.00.224.330 I llm_load_print_meta: n_head           = 8
0.00.224.331 I llm_load_print_meta: n_head_kv        = 1
0.00.224.331 I llm_load_print_meta: n_rot            = 256
0.00.224.332 I llm_load_print_meta: n_swa            = 0
0.00.224.332 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.332 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.333 I llm_load_print_meta: n_gqa            = 8
0.00.224.334 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.335 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.336 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.337 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.337 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.338 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.338 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.339 I llm_load_print_meta: n_ff             = 16384
0.00.224.339 I llm_load_print_meta: n_expert         = 0
0.00.224.340 I llm_load_print_meta: n_expert_used    = 0
0.00.224.340 I llm_load_print_meta: causal attn      = 1
0.00.224.340 I llm_load_print_meta: pooling type     = 0
0.00.224.340 I llm_load_print_meta: rope type        = 2
0.00.224.341 I llm_load_print_meta: rope scaling     = linear
0.00.224.342 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.343 I llm_load_print_meta: freq_scale_train = 1
0.00.224.343 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.343 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.344 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.344 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.344 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.344 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.345 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.345 I llm_load_print_meta: model type       = 2B
0.00.224.346 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.347 I llm_load_print_meta: model params     = 2.51 B
0.00.224.348 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.348 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.348 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.349 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.349 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.349 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.350 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.350 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.350 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.351 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.351 I llm_load_print_meta: max token length = 93
0.00.224.377 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.326.354 I llm_load_tensors:        CPU buffer size =   865.98 MiB
0.00.326.362 I llm_load_tensors:        CPU buffer size =   334.74 MiB
0.00.326.362 I llm_load_tensors:        CPU buffer size =   402.73 MiB
0.00.326.363 I llm_load_tensors:        CPU buffer size =   335.27 MiB
0.00.326.364 I llm_load_tensors:        CPU buffer size =   338.98 MiB
0.00.326.365 I llm_load_tensors:        CPU buffer size =   261.96 MiB
.............................................................
0.00.331.694 I llama_new_context_with_model: n_ctx      = 8192
0.00.331.700 I llama_new_context_with_model: n_batch    = 2048
0.00.331.700 I llama_new_context_with_model: n_ubatch   = 512
0.00.331.701 I llama_new_context_with_model: flash_attn = 0
0.00.331.704 I llama_new_context_with_model: freq_base  = 10000.0
0.00.331.704 I llama_new_context_with_model: freq_scale = 1
0.00.360.247 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.360.263 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.360.353 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.361.211 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.361.219 I llama_new_context_with_model: graph nodes  = 601
0.00.361.219 I llama_new_context_with_model: graph splits = 1
0.00.361.221 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.451.802 I main: llama threadpool init, n_threads = 4
0.00.451.814 I 
0.00.451.891 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.451.895 I 
0.00.451.929 I sampler seed: 2206473782
0.00.451.938 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.451.941 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.451.941 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.451.941 I 
 increasities, which can be interpreted as the outcome of a competition between two minds. It is interesting to observe that the mind of the winner of such a competition

0.02.704.803 I llama_perf_sampler_print:    sampling time =       5.70 ms /    33 runs   (    0.17 ms per token,  5791.51 tokens per second)
0.02.704.805 I llama_perf_context_print:        load time =     449.89 ms
0.02.704.807 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.704.808 I llama_perf_context_print:        eval time =    2233.99 ms /    32 runs   (   69.81 ms per token,    14.32 tokens per second)
0.02.704.809 I llama_perf_context_print:       total time =    2253.01 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.545 I build: 3879 (133c7b46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.739 I main: llama backend init
0.00.001.908 I main: load the model and apply lora adapter, if any
0.00.022.125 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.022.136 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.144 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.145 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.149 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.149 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.150 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.150 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.151 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.152 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.156 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.157 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.159 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.160 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.160 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.427 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.710 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.558 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.564 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.565 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.565 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.566 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.567 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.568 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.571 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.571 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.573 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.573 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.132.574 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.578 I llama_model_loader: - type  f32:   37 tensors
0.00.132.582 I llama_model_loader: - type q8_0:  127 tensors
0.00.189.154 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.202.345 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.203.050 I llm_load_vocab: special tokens cache size = 5
0.00.224.286 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.224.300 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.224.301 I llm_load_print_meta: arch             = gemma
0.00.224.301 I llm_load_print_meta: vocab type       = SPM
0.00.224.302 I llm_load_print_meta: n_vocab          = 256000
0.00.224.302 I llm_load_print_meta: n_merges         = 0
0.00.224.303 I llm_load_print_meta: vocab_only       = 0
0.00.224.303 I llm_load_print_meta: n_ctx_train      = 8192
0.00.224.303 I llm_load_print_meta: n_embd           = 2048
0.00.224.303 I llm_load_print_meta: n_layer          = 18
0.00.224.316 I llm_load_print_meta: n_head           = 8
0.00.224.317 I llm_load_print_meta: n_head_kv        = 1
0.00.224.317 I llm_load_print_meta: n_rot            = 256
0.00.224.317 I llm_load_print_meta: n_swa            = 0
0.00.224.317 I llm_load_print_meta: n_embd_head_k    = 256
0.00.224.318 I llm_load_print_meta: n_embd_head_v    = 256
0.00.224.319 I llm_load_print_meta: n_gqa            = 8
0.00.224.320 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.224.321 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.224.321 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.224.323 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.224.323 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.224.323 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.224.324 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.224.325 I llm_load_print_meta: n_ff             = 16384
0.00.224.325 I llm_load_print_meta: n_expert         = 0
0.00.224.325 I llm_load_print_meta: n_expert_used    = 0
0.00.224.326 I llm_load_print_meta: causal attn      = 1
0.00.224.326 I llm_load_print_meta: pooling type     = 0
0.00.224.326 I llm_load_print_meta: rope type        = 2
0.00.224.326 I llm_load_print_meta: rope scaling     = linear
0.00.224.328 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.224.328 I llm_load_print_meta: freq_scale_train = 1
0.00.224.329 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.224.329 I llm_load_print_meta: rope_finetuned   = unknown
0.00.224.329 I llm_load_print_meta: ssm_d_conv       = 0
0.00.224.330 I llm_load_print_meta: ssm_d_inner      = 0
0.00.224.330 I llm_load_print_meta: ssm_d_state      = 0
0.00.224.330 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.224.330 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.224.331 I llm_load_print_meta: model type       = 2B
0.00.224.331 I llm_load_print_meta: model ftype      = Q8_0
0.00.224.332 I llm_load_print_meta: model params     = 2.51 B
0.00.224.333 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.224.333 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.224.334 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.224.334 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.224.334 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.224.334 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.224.335 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.224.335 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.224.336 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.224.336 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.224.336 I llm_load_print_meta: max token length = 93
0.00.224.354 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.317.503 I llm_load_tensors:        CPU buffer size =  2539.66 MiB
.............................................................
0.00.322.531 I llama_new_context_with_model: n_ctx      = 8192
0.00.322.537 I llama_new_context_with_model: n_batch    = 2048
0.00.322.537 I llama_new_context_with_model: n_ubatch   = 512
0.00.322.538 I llama_new_context_with_model: flash_attn = 0
0.00.322.540 I llama_new_context_with_model: freq_base  = 10000.0
0.00.322.541 I llama_new_context_with_model: freq_scale = 1
0.00.352.852 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.352.868 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.352.984 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.353.876 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.353.883 I llama_new_context_with_model: graph nodes  = 601
0.00.353.883 I llama_new_context_with_model: graph splits = 1
0.00.353.885 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.441.351 I main: llama threadpool init, n_threads = 4
0.00.441.363 I 
0.00.441.439 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.441.443 I 
0.00.441.477 I sampler seed: 930950670
0.00.441.487 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.441.491 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.441.491 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.441.492 I 
 increasities, but with the opposite meaning. [end of text]


0.01.129.295 I llama_perf_sampler_print:    sampling time =       1.74 ms /    11 runs   (    0.16 ms per token,  6329.11 tokens per second)
0.01.129.299 I llama_perf_context_print:        load time =     439.37 ms
0.01.129.301 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.129.303 I llama_perf_context_print:        eval time =     681.12 ms /    10 runs   (   68.11 ms per token,    14.68 tokens per second)
0.01.129.304 I llama_perf_context_print:       total time =     687.95 ms /    11 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.535 I build: 3879 (133c7b46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.773 I main: llama backend init
0.00.001.910 I main: load the model and apply lora adapter, if any
0.00.021.887 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.021.960 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.021.970 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.976 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.978 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.983 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.987 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.988 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.989 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.991 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.992 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.998 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.999 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.000 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.001 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.022.002 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.740 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.130.526 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.137.294 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.137.300 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.137.300 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.137.301 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.137.301 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.137.303 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.137.303 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.137.305 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.137.306 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.137.307 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.137.308 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.137.308 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.137.311 I llama_model_loader: - type  f32:   37 tensors
0.00.137.314 I llama_model_loader: - type q8_0:  127 tensors
0.00.193.393 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.208.072 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.208.844 I llm_load_vocab: special tokens cache size = 5
0.00.230.945 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.230.961 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.230.962 I llm_load_print_meta: arch             = gemma
0.00.230.963 I llm_load_print_meta: vocab type       = SPM
0.00.230.963 I llm_load_print_meta: n_vocab          = 256000
0.00.230.964 I llm_load_print_meta: n_merges         = 0
0.00.230.964 I llm_load_print_meta: vocab_only       = 0
0.00.230.965 I llm_load_print_meta: n_ctx_train      = 8192
0.00.230.965 I llm_load_print_meta: n_embd           = 2048
0.00.230.965 I llm_load_print_meta: n_layer          = 18
0.00.230.979 I llm_load_print_meta: n_head           = 8
0.00.230.980 I llm_load_print_meta: n_head_kv        = 1
0.00.230.981 I llm_load_print_meta: n_rot            = 256
0.00.230.981 I llm_load_print_meta: n_swa            = 0
0.00.230.981 I llm_load_print_meta: n_embd_head_k    = 256
0.00.230.982 I llm_load_print_meta: n_embd_head_v    = 256
0.00.230.983 I llm_load_print_meta: n_gqa            = 8
0.00.230.984 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.230.985 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.230.985 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.230.987 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.230.987 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.230.988 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.230.988 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.230.989 I llm_load_print_meta: n_ff             = 16384
0.00.230.989 I llm_load_print_meta: n_expert         = 0
0.00.230.989 I llm_load_print_meta: n_expert_used    = 0
0.00.230.990 I llm_load_print_meta: causal attn      = 1
0.00.230.990 I llm_load_print_meta: pooling type     = 0
0.00.230.990 I llm_load_print_meta: rope type        = 2
0.00.230.990 I llm_load_print_meta: rope scaling     = linear
0.00.230.992 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.230.992 I llm_load_print_meta: freq_scale_train = 1
0.00.230.992 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.230.993 I llm_load_print_meta: rope_finetuned   = unknown
0.00.230.994 I llm_load_print_meta: ssm_d_conv       = 0
0.00.230.994 I llm_load_print_meta: ssm_d_inner      = 0
0.00.230.994 I llm_load_print_meta: ssm_d_state      = 0
0.00.230.995 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.230.995 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.230.995 I llm_load_print_meta: model type       = 2B
0.00.230.996 I llm_load_print_meta: model ftype      = Q8_0
0.00.230.997 I llm_load_print_meta: model params     = 2.51 B
0.00.230.998 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.230.998 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.230.998 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.230.999 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.230.999 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.230.999 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.231.000 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.231.001 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.231.001 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.231.002 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.231.002 I llm_load_print_meta: max token length = 93
0.00.231.023 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.306.467 I llm_load_tensors:        CPU buffer size =   967.99 MiB
0.00.306.474 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.306.475 I llm_load_tensors:        CPU buffer size =   411.77 MiB
0.00.306.476 I llm_load_tensors:        CPU buffer size =   437.27 MiB
0.00.306.476 I llm_load_tensors:        CPU buffer size =   344.30 MiB
0.00.306.477 I llm_load_tensors:        CPU buffer size =    34.02 MiB
.............................................................
0.00.311.565 I llama_new_context_with_model: n_ctx      = 8192
0.00.311.571 I llama_new_context_with_model: n_batch    = 2048
0.00.311.572 I llama_new_context_with_model: n_ubatch   = 512
0.00.311.573 I llama_new_context_with_model: flash_attn = 0
0.00.311.575 I llama_new_context_with_model: freq_base  = 10000.0
0.00.311.576 I llama_new_context_with_model: freq_scale = 1
0.00.340.102 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.340.119 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.340.215 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.341.081 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.341.088 I llama_new_context_with_model: graph nodes  = 601
0.00.341.089 I llama_new_context_with_model: graph splits = 1
0.00.341.091 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.433.067 I main: llama threadpool init, n_threads = 4
0.00.433.078 I 
0.00.433.154 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.433.157 I 
0.00.433.192 I sampler seed: 3759735684
0.00.433.201 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.433.204 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.433.204 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.433.204 I 
 increadibly, and then abruptly stopped. The silence that followed was deafening.

What is the most likely explanation for this abrupt cessation of sound?

A)

0.02.709.116 I llama_perf_sampler_print:    sampling time =       5.48 ms /    33 runs   (    0.17 ms per token,  6025.20 tokens per second)
0.02.709.118 I llama_perf_context_print:        load time =     431.08 ms
0.02.709.120 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.709.121 I llama_perf_context_print:        eval time =    2257.80 ms /    32 runs   (   70.56 ms per token,    14.17 tokens per second)
0.02.709.122 I llama_perf_context_print:       total time =    2276.06 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.546 I build: 3879 (133c7b46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.762 I main: llama backend init
0.00.001.895 I main: load the model and apply lora adapter, if any
0.00.301.527 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.301.606 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.301.617 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.301.625 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.301.627 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.301.632 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.301.633 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.301.633 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.301.634 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.301.635 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.301.636 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.301.641 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.301.642 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.301.642 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.301.643 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.301.643 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.329.580 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.405.472 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.412.258 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.412.264 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.412.265 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.412.265 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.412.266 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.412.267 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.412.268 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.412.270 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.412.271 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.412.272 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.412.273 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.412.274 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.412.279 I llama_model_loader: - type  f32:   37 tensors
0.00.412.282 I llama_model_loader: - type q8_0:  127 tensors
0.00.467.228 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.479.990 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.480.592 I llm_load_vocab: special tokens cache size = 5
0.00.503.372 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.503.386 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.503.386 I llm_load_print_meta: arch             = gemma
0.00.503.387 I llm_load_print_meta: vocab type       = SPM
0.00.503.388 I llm_load_print_meta: n_vocab          = 256000
0.00.503.388 I llm_load_print_meta: n_merges         = 0
0.00.503.388 I llm_load_print_meta: vocab_only       = 0
0.00.503.389 I llm_load_print_meta: n_ctx_train      = 8192
0.00.503.389 I llm_load_print_meta: n_embd           = 2048
0.00.503.389 I llm_load_print_meta: n_layer          = 18
0.00.503.402 I llm_load_print_meta: n_head           = 8
0.00.503.403 I llm_load_print_meta: n_head_kv        = 1
0.00.503.404 I llm_load_print_meta: n_rot            = 256
0.00.503.404 I llm_load_print_meta: n_swa            = 0
0.00.503.405 I llm_load_print_meta: n_embd_head_k    = 256
0.00.503.405 I llm_load_print_meta: n_embd_head_v    = 256
0.00.503.406 I llm_load_print_meta: n_gqa            = 8
0.00.503.408 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.503.410 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.503.411 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.503.413 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.503.414 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.503.414 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.503.417 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.503.419 I llm_load_print_meta: n_ff             = 16384
0.00.503.419 I llm_load_print_meta: n_expert         = 0
0.00.503.420 I llm_load_print_meta: n_expert_used    = 0
0.00.503.421 I llm_load_print_meta: causal attn      = 1
0.00.503.421 I llm_load_print_meta: pooling type     = 0
0.00.503.421 I llm_load_print_meta: rope type        = 2
0.00.503.422 I llm_load_print_meta: rope scaling     = linear
0.00.503.424 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.503.425 I llm_load_print_meta: freq_scale_train = 1
0.00.503.426 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.503.426 I llm_load_print_meta: rope_finetuned   = unknown
0.00.503.427 I llm_load_print_meta: ssm_d_conv       = 0
0.00.503.428 I llm_load_print_meta: ssm_d_inner      = 0
0.00.503.429 I llm_load_print_meta: ssm_d_state      = 0
0.00.503.429 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.503.430 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.503.431 I llm_load_print_meta: model type       = 2B
0.00.503.432 I llm_load_print_meta: model ftype      = Q8_0
0.00.503.433 I llm_load_print_meta: model params     = 2.51 B
0.00.503.434 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.503.435 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.503.436 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.503.437 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.503.438 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.503.438 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.503.439 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.503.439 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.503.443 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.503.444 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.503.444 I llm_load_print_meta: max token length = 93
0.00.503.467 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.575.484 I llm_load_tensors:        CPU buffer size =  1904.18 MiB
0.00.575.491 I llm_load_tensors:        CPU buffer size =   635.48 MiB
.............................................................
0.00.580.558 I llama_new_context_with_model: n_ctx      = 8192
0.00.580.565 I llama_new_context_with_model: n_batch    = 2048
0.00.580.565 I llama_new_context_with_model: n_ubatch   = 512
0.00.580.566 I llama_new_context_with_model: flash_attn = 0
0.00.580.568 I llama_new_context_with_model: freq_base  = 10000.0
0.00.580.569 I llama_new_context_with_model: freq_scale = 1
0.00.609.644 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.609.661 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.609.758 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.610.644 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.610.651 I llama_new_context_with_model: graph nodes  = 601
0.00.610.652 I llama_new_context_with_model: graph splits = 1
0.00.610.654 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.705.605 I main: llama threadpool init, n_threads = 4
0.00.705.617 I 
0.00.705.705 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.705.708 I 
0.00.705.754 I sampler seed: 1308566017
0.00.705.764 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.705.767 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.705.767 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.705.767 I 
 increasements on the text.

The text provided does not contain any information regarding the increasements, so I am unable to extract the requested data from the provided

0.03.135.399 I llama_perf_sampler_print:    sampling time =       5.70 ms /    33 runs   (    0.17 ms per token,  5787.44 tokens per second)
0.03.135.402 I llama_perf_context_print:        load time =     703.63 ms
0.03.135.403 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.135.405 I llama_perf_context_print:        eval time =    2409.81 ms /    32 runs   (   75.31 ms per token,    13.28 tokens per second)
0.03.135.405 I llama_perf_context_print:       total time =    2429.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m19.199s
user	0m33.284s
sys	0m9.373s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 3879 (133c7b46)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 31966.46 ms
main:    total time = 31966.46 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.581 I build: 3879 (133c7b46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.790 I main: llama backend init
0.00.001.912 I main: load the model and apply lora adapter, if any
0.00.022.458 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.505 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.517 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.522 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.523 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.526 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.527 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.528 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.529 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.529 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.530 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.533 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.534 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.535 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.535 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.536 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.093 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.053 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.857 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.863 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.863 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.864 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.864 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.865 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.866 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.869 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.869 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.870 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.870 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.873 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.877 I llama_model_loader: - type  f32:   37 tensors
0.00.132.880 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.880 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.121 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.199.919 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.200.512 I llm_load_vocab: special tokens cache size = 5
0.00.221.365 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.221.376 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.221.377 I llm_load_print_meta: arch             = gemma
0.00.221.378 I llm_load_print_meta: vocab type       = SPM
0.00.221.378 I llm_load_print_meta: n_vocab          = 256000
0.00.221.379 I llm_load_print_meta: n_merges         = 0
0.00.221.379 I llm_load_print_meta: vocab_only       = 0
0.00.221.380 I llm_load_print_meta: n_ctx_train      = 8192
0.00.221.381 I llm_load_print_meta: n_embd           = 2048
0.00.221.382 I llm_load_print_meta: n_layer          = 18
0.00.221.392 I llm_load_print_meta: n_head           = 8
0.00.221.393 I llm_load_print_meta: n_head_kv        = 1
0.00.221.394 I llm_load_print_meta: n_rot            = 256
0.00.221.394 I llm_load_print_meta: n_swa            = 0
0.00.221.394 I llm_load_print_meta: n_embd_head_k    = 256
0.00.221.395 I llm_load_print_meta: n_embd_head_v    = 256
0.00.221.396 I llm_load_print_meta: n_gqa            = 8
0.00.221.397 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.221.398 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.221.398 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.221.400 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.221.401 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.221.401 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.221.401 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.221.402 I llm_load_print_meta: n_ff             = 16384
0.00.221.405 I llm_load_print_meta: n_expert         = 0
0.00.221.405 I llm_load_print_meta: n_expert_used    = 0
0.00.221.405 I llm_load_print_meta: causal attn      = 1
0.00.221.406 I llm_load_print_meta: pooling type     = 0
0.00.221.406 I llm_load_print_meta: rope type        = 2
0.00.221.406 I llm_load_print_meta: rope scaling     = linear
0.00.221.408 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.221.408 I llm_load_print_meta: freq_scale_train = 1
0.00.221.409 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.221.410 I llm_load_print_meta: rope_finetuned   = unknown
0.00.221.410 I llm_load_print_meta: ssm_d_conv       = 0
0.00.221.411 I llm_load_print_meta: ssm_d_inner      = 0
0.00.221.411 I llm_load_print_meta: ssm_d_state      = 0
0.00.221.411 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.221.412 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.221.413 I llm_load_print_meta: model type       = 2B
0.00.221.413 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.221.414 I llm_load_print_meta: model params     = 2.51 B
0.00.221.415 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.221.416 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.221.416 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.221.417 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.221.417 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.221.417 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.221.419 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.221.419 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.221.419 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.221.420 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.221.422 I llm_load_print_meta: max token length = 93
0.00.221.445 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.279.833 I llm_load_tensors:        CPU buffer size =   604.15 MiB
0.00.279.840 I llm_load_tensors:        CPU buffer size =   185.62 MiB
0.00.279.840 I llm_load_tensors:        CPU buffer size =   221.61 MiB
0.00.279.841 I llm_load_tensors:        CPU buffer size =   185.89 MiB
0.00.279.841 I llm_load_tensors:        CPU buffer size =   187.86 MiB
0.00.279.842 I llm_load_tensors:        CPU buffer size =   163.85 MiB
........................................................
0.00.284.792 I llama_new_context_with_model: n_ctx      = 8192
0.00.284.798 I llama_new_context_with_model: n_batch    = 2048
0.00.284.798 I llama_new_context_with_model: n_ubatch   = 512
0.00.284.799 I llama_new_context_with_model: flash_attn = 0
0.00.284.800 I llama_new_context_with_model: freq_base  = 10000.0
0.00.284.801 I llama_new_context_with_model: freq_scale = 1
0.00.312.859 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.312.875 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.312.964 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.313.846 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.313.853 I llama_new_context_with_model: graph nodes  = 601
0.00.313.853 I llama_new_context_with_model: graph splits = 1
0.00.313.855 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.397.488 I main: llama threadpool init, n_threads = 4
0.00.397.500 I 
0.00.397.580 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.397.583 I 
0.00.397.621 I sampler seed: 3569649872
0.00.397.629 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.397.631 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.397.632 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.397.632 I 
 seconally, with an exasperated sigh. "I can't believe I have to spend another day trapped in this stupid cubicle."

The cubicle was a monotonous

0.02.021.706 I llama_perf_sampler_print:    sampling time =       5.71 ms /    33 runs   (    0.17 ms per token,  5775.29 tokens per second)
0.02.021.721 I llama_perf_context_print:        load time =     395.51 ms
0.02.021.722 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.021.724 I llama_perf_context_print:        eval time =    1604.69 ms /    32 runs   (   50.15 ms per token,    19.94 tokens per second)
0.02.021.725 I llama_perf_context_print:       total time =    1624.23 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 3879 (133c7b46)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 32033.75 ms
main:    total time = 32033.75 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.546 I build: 3879 (133c7b46) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.741 I main: llama backend init
0.00.001.857 I main: load the model and apply lora adapter, if any
0.00.022.090 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.022.102 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.108 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.109 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.113 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.113 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.114 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.114 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.115 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.115 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.119 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.119 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.120 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.120 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.121 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.181 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.039 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.791 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.797 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.798 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.799 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.799 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.800 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.801 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.803 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.804 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.808 I llama_model_loader: - type  f32:   37 tensors
0.00.131.812 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.812 I llama_model_loader: - type q6_K:   19 tensors
0.00.187.011 W llm_load_vocab: control-looking token: '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.200.597 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.201.257 I llm_load_vocab: special tokens cache size = 5
0.00.222.216 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.222.230 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.222.230 I llm_load_print_meta: arch             = gemma
0.00.222.231 I llm_load_print_meta: vocab type       = SPM
0.00.222.232 I llm_load_print_meta: n_vocab          = 256000
0.00.222.232 I llm_load_print_meta: n_merges         = 0
0.00.222.232 I llm_load_print_meta: vocab_only       = 0
0.00.222.233 I llm_load_print_meta: n_ctx_train      = 8192
0.00.222.233 I llm_load_print_meta: n_embd           = 2048
0.00.222.233 I llm_load_print_meta: n_layer          = 18
0.00.222.246 I llm_load_print_meta: n_head           = 8
0.00.222.247 I llm_load_print_meta: n_head_kv        = 1
0.00.222.247 I llm_load_print_meta: n_rot            = 256
0.00.222.248 I llm_load_print_meta: n_swa            = 0
0.00.222.248 I llm_load_print_meta: n_embd_head_k    = 256
0.00.222.248 I llm_load_print_meta: n_embd_head_v    = 256
0.00.222.249 I llm_load_print_meta: n_gqa            = 8
0.00.222.250 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.222.251 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.222.252 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.222.253 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.222.254 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.222.254 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.222.255 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.222.256 I llm_load_print_meta: n_ff             = 16384
0.00.222.256 I llm_load_print_meta: n_expert         = 0
0.00.222.256 I llm_load_print_meta: n_expert_used    = 0
0.00.222.257 I llm_load_print_meta: causal attn      = 1
0.00.222.257 I llm_load_print_meta: pooling type     = 0
0.00.222.257 I llm_load_print_meta: rope type        = 2
0.00.222.258 I llm_load_print_meta: rope scaling     = linear
0.00.222.259 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.222.260 I llm_load_print_meta: freq_scale_train = 1
0.00.222.260 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.222.260 I llm_load_print_meta: rope_finetuned   = unknown
0.00.222.261 I llm_load_print_meta: ssm_d_conv       = 0
0.00.222.261 I llm_load_print_meta: ssm_d_inner      = 0
0.00.222.261 I llm_load_print_meta: ssm_d_state      = 0
0.00.222.261 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.222.262 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.222.262 I llm_load_print_meta: model type       = 2B
0.00.222.263 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.222.264 I llm_load_print_meta: model params     = 2.51 B
0.00.222.264 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.222.265 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.222.265 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.222.266 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.222.266 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.222.266 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.222.266 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.222.267 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.222.267 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.222.267 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.222.268 I llm_load_print_meta: max token length = 93
0.00.222.288 I llm_load_tensors: ggml ctx size =    0.08 MiB
0.00.279.994 I llm_load_tensors:        CPU buffer size =  1548.98 MiB
........................................................
0.00.284.978 I llama_new_context_with_model: n_ctx      = 8192
0.00.284.985 I llama_new_context_with_model: n_batch    = 2048
0.00.284.985 I llama_new_context_with_model: n_ubatch   = 512
0.00.284.986 I llama_new_context_with_model: flash_attn = 0
0.00.284.988 I llama_new_context_with_model: freq_base  = 10000.0
0.00.284.990 I llama_new_context_with_model: freq_scale = 1
0.00.314.135 I llama_kv_cache_init:        CPU KV buffer size =   144.00 MiB
0.00.314.150 I llama_new_context_with_model: KV self size  =  144.00 MiB, K (f16):   72.00 MiB, V (f16):   72.00 MiB
0.00.314.245 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.315.102 I llama_new_context_with_model:        CPU compute buffer size =   508.00 MiB
0.00.315.110 I llama_new_context_with_model: graph nodes  = 601
0.00.315.111 I llama_new_context_with_model: graph splits = 1
0.00.315.112 W llama_init_from_gpt_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.396.470 I main: llama threadpool init, n_threads = 4
0.00.396.482 I 
0.00.396.558 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.396.562 I 
0.00.396.600 I sampler seed: 3344133386
0.00.396.610 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	top_k = 40, tfs_z = 1.000, top_p = 0.950, min_p = 0.050, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.396.613 I sampler chain: logits -> logit-bias -> penalties -> top-k -> tail-free -> typical -> top-p -> min-p -> temp-ext -> softmax -> dist 
0.00.396.613 I generate: n_ctx = 8192, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.396.613 I 
 maneurages.

I understand. I will be mindful of the context and avoid making any jokes or inappropriate remarks. [end of text]


0.01.611.844 I llama_perf_sampler_print:    sampling time =       4.81 ms /    25 runs   (    0.19 ms per token,  5196.42 tokens per second)
0.01.611.847 I llama_perf_context_print:        load time =     394.55 ms
0.01.611.849 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.611.852 I llama_perf_context_print:        eval time =    1200.29 ms /    24 runs   (   50.01 ms per token,    20.00 tokens per second)
0.01.611.854 I llama_perf_context_print:       total time =    1215.38 ms /    25 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m10.881s
user	8m12.761s
sys	0m6.973s
