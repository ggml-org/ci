+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.677 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.875 I main: llama backend init
0.00.001.900 I main: load the model and apply lora adapter, if any
0.00.024.399 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.412 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.503 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.514 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.516 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.521 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.525 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.526 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.527 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.528 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.529 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.536 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.537 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.538 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.539 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.540 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.791 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.835 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.456 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.467 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.468 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.469 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.470 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.471 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.472 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.476 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.477 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.478 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.479 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.272.480 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.488 I llama_model_loader: - type  f32:   37 tensors
0.00.272.490 I llama_model_loader: - type q8_0:  127 tensors
0.00.462.324 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.527.240 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.528.218 I llm_load_vocab: special tokens cache size = 5
0.00.628.441 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.628.515 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.628.516 I llm_load_print_meta: arch             = gemma
0.00.628.517 I llm_load_print_meta: vocab type       = SPM
0.00.628.518 I llm_load_print_meta: n_vocab          = 256000
0.00.628.520 I llm_load_print_meta: n_merges         = 0
0.00.628.521 I llm_load_print_meta: vocab_only       = 0
0.00.628.521 I llm_load_print_meta: n_ctx_train      = 8192
0.00.628.521 I llm_load_print_meta: n_embd           = 2048
0.00.628.522 I llm_load_print_meta: n_layer          = 18
0.00.628.592 I llm_load_print_meta: n_head           = 8
0.00.628.599 I llm_load_print_meta: n_head_kv        = 1
0.00.628.600 I llm_load_print_meta: n_rot            = 256
0.00.628.600 I llm_load_print_meta: n_swa            = 0
0.00.628.601 I llm_load_print_meta: n_embd_head_k    = 256
0.00.628.601 I llm_load_print_meta: n_embd_head_v    = 256
0.00.628.606 I llm_load_print_meta: n_gqa            = 8
0.00.628.610 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.628.615 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.628.616 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.628.618 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.628.618 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.628.619 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.628.620 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.628.625 I llm_load_print_meta: n_ff             = 16384
0.00.628.626 I llm_load_print_meta: n_expert         = 0
0.00.628.626 I llm_load_print_meta: n_expert_used    = 0
0.00.628.627 I llm_load_print_meta: causal attn      = 1
0.00.628.627 I llm_load_print_meta: pooling type     = 0
0.00.628.627 I llm_load_print_meta: rope type        = 2
0.00.628.628 I llm_load_print_meta: rope scaling     = linear
0.00.628.630 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.628.630 I llm_load_print_meta: freq_scale_train = 1
0.00.628.631 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.628.631 I llm_load_print_meta: rope_finetuned   = unknown
0.00.628.631 I llm_load_print_meta: ssm_d_conv       = 0
0.00.628.632 I llm_load_print_meta: ssm_d_inner      = 0
0.00.628.632 I llm_load_print_meta: ssm_d_state      = 0
0.00.628.633 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.628.633 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.628.634 I llm_load_print_meta: model type       = 2B
0.00.628.635 I llm_load_print_meta: model ftype      = Q8_0
0.00.628.635 I llm_load_print_meta: model params     = 2.51 B
0.00.628.644 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.628.644 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.628.646 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.628.646 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.628.647 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.628.647 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.628.652 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.628.653 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.628.658 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.628.663 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.628.664 I llm_load_print_meta: max token length = 93
0.00.729.472 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.729.482 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.729.483 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.729.484 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.729.484 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.729.485 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.735.580 I llama_new_context_with_model: n_seq_max     = 1
0.00.735.588 I llama_new_context_with_model: n_ctx         = 4096
0.00.735.588 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.735.589 I llama_new_context_with_model: n_batch       = 2048
0.00.735.589 I llama_new_context_with_model: n_ubatch      = 512
0.00.735.589 I llama_new_context_with_model: flash_attn    = 0
0.00.735.593 I llama_new_context_with_model: freq_base     = 10000.0
0.00.735.593 I llama_new_context_with_model: freq_scale    = 1
0.00.735.594 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.752.360 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.752.400 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.752.526 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.755.126 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.755.131 I llama_new_context_with_model: graph nodes  = 601
0.00.755.131 I llama_new_context_with_model: graph splits = 1
0.00.755.156 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.360.107 I main: llama threadpool init, n_threads = 4
0.01.360.121 I 
0.01.360.228 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.360.232 I 
0.01.360.460 I sampler seed: 2818033405
0.01.360.473 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.360.479 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.360.482 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.360.483 I 
 increasities, but it is not appropriate to engage in sexually suggestive or inappropriate behavior. [end of text]


0.08.963.700 I llama_perf_sampler_print:    sampling time =      27.81 ms /    19 runs   (    1.46 ms per token,   683.21 tokens per second)
0.08.963.716 I llama_perf_context_print:        load time =    1358.11 ms
0.08.963.717 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.963.719 I llama_perf_context_print:        eval time =    7551.80 ms /    18 runs   (  419.54 ms per token,     2.38 tokens per second)
0.08.963.720 I llama_perf_context_print:       total time =    7603.60 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.666 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.865 I main: llama backend init
0.00.001.914 I main: load the model and apply lora adapter, if any
0.00.024.374 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.475 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.490 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.494 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.499 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.501 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.503 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.504 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.506 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.508 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.515 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.519 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.520 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.521 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.522 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.042 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.165 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.771 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.783 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.784 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.785 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.786 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.787 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.789 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.792 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.794 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.795 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.796 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.272.798 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.806 I llama_model_loader: - type  f32:   37 tensors
0.00.272.808 I llama_model_loader: - type q8_0:  127 tensors
0.00.469.962 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.540.191 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.541.247 I llm_load_vocab: special tokens cache size = 5
0.00.638.634 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.638.705 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.638.706 I llm_load_print_meta: arch             = gemma
0.00.638.707 I llm_load_print_meta: vocab type       = SPM
0.00.638.708 I llm_load_print_meta: n_vocab          = 256000
0.00.638.710 I llm_load_print_meta: n_merges         = 0
0.00.638.711 I llm_load_print_meta: vocab_only       = 0
0.00.638.711 I llm_load_print_meta: n_ctx_train      = 8192
0.00.638.712 I llm_load_print_meta: n_embd           = 2048
0.00.638.712 I llm_load_print_meta: n_layer          = 18
0.00.638.775 I llm_load_print_meta: n_head           = 8
0.00.638.782 I llm_load_print_meta: n_head_kv        = 1
0.00.638.783 I llm_load_print_meta: n_rot            = 256
0.00.638.783 I llm_load_print_meta: n_swa            = 0
0.00.638.783 I llm_load_print_meta: n_embd_head_k    = 256
0.00.638.784 I llm_load_print_meta: n_embd_head_v    = 256
0.00.638.789 I llm_load_print_meta: n_gqa            = 8
0.00.638.793 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.638.798 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.638.799 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.638.801 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.638.802 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.638.802 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.638.802 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.638.807 I llm_load_print_meta: n_ff             = 16384
0.00.638.808 I llm_load_print_meta: n_expert         = 0
0.00.638.808 I llm_load_print_meta: n_expert_used    = 0
0.00.638.809 I llm_load_print_meta: causal attn      = 1
0.00.638.810 I llm_load_print_meta: pooling type     = 0
0.00.638.810 I llm_load_print_meta: rope type        = 2
0.00.638.810 I llm_load_print_meta: rope scaling     = linear
0.00.638.812 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.638.812 I llm_load_print_meta: freq_scale_train = 1
0.00.638.813 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.638.813 I llm_load_print_meta: rope_finetuned   = unknown
0.00.638.814 I llm_load_print_meta: ssm_d_conv       = 0
0.00.638.814 I llm_load_print_meta: ssm_d_inner      = 0
0.00.638.814 I llm_load_print_meta: ssm_d_state      = 0
0.00.638.815 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.638.816 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.638.817 I llm_load_print_meta: model type       = 2B
0.00.638.818 I llm_load_print_meta: model ftype      = Q8_0
0.00.638.818 I llm_load_print_meta: model params     = 2.51 B
0.00.638.827 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.638.828 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.638.829 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.638.830 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.638.830 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.638.831 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.638.837 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.638.838 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.638.844 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.638.845 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.638.845 I llm_load_print_meta: max token length = 93
0.00.734.733 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.740.674 I llama_new_context_with_model: n_seq_max     = 1
0.00.740.682 I llama_new_context_with_model: n_ctx         = 4096
0.00.740.683 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.740.683 I llama_new_context_with_model: n_batch       = 2048
0.00.740.684 I llama_new_context_with_model: n_ubatch      = 512
0.00.740.684 I llama_new_context_with_model: flash_attn    = 0
0.00.740.688 I llama_new_context_with_model: freq_base     = 10000.0
0.00.740.689 I llama_new_context_with_model: freq_scale    = 1
0.00.740.690 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.758.601 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.758.645 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.758.775 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.761.330 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.761.335 I llama_new_context_with_model: graph nodes  = 601
0.00.761.335 I llama_new_context_with_model: graph splits = 1
0.00.761.358 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.368.183 I main: llama threadpool init, n_threads = 4
0.01.368.198 I 
0.01.368.307 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.368.307 I 
0.01.368.536 I sampler seed: 1944690239
0.01.368.549 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.368.556 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.368.559 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.368.560 I 
 increasels and other small projectiles, such as grenades, into a body of water for the purpose of recreational diving.

**a) Identify the potential risks associated

0.15.052.395 I llama_perf_sampler_print:    sampling time =      49.55 ms /    33 runs   (    1.50 ms per token,   665.97 tokens per second)
0.15.052.398 I llama_perf_context_print:        load time =    1366.17 ms
0.15.052.412 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.15.052.415 I llama_perf_context_print:        eval time =   13593.16 ms /    32 runs   (  424.79 ms per token,     2.35 tokens per second)
0.15.052.416 I llama_perf_context_print:       total time =   13684.22 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.633 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.827 I main: llama backend init
0.00.001.860 I main: load the model and apply lora adapter, if any
0.00.024.629 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.642 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.738 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.752 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.753 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.759 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.764 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.765 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.766 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.767 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.768 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.778 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.781 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.782 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.784 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.785 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.979 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.075 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.687 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.697 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.699 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.700 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.701 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.702 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.703 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.706 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.707 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.709 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.710 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.272.711 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.718 I llama_model_loader: - type  f32:   37 tensors
0.00.272.720 I llama_model_loader: - type q8_0:  127 tensors
0.00.453.166 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.525.874 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.526.877 I llm_load_vocab: special tokens cache size = 5
0.00.624.196 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.624.268 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.624.269 I llm_load_print_meta: arch             = gemma
0.00.624.270 I llm_load_print_meta: vocab type       = SPM
0.00.624.270 I llm_load_print_meta: n_vocab          = 256000
0.00.624.273 I llm_load_print_meta: n_merges         = 0
0.00.624.273 I llm_load_print_meta: vocab_only       = 0
0.00.624.273 I llm_load_print_meta: n_ctx_train      = 8192
0.00.624.274 I llm_load_print_meta: n_embd           = 2048
0.00.624.274 I llm_load_print_meta: n_layer          = 18
0.00.624.341 I llm_load_print_meta: n_head           = 8
0.00.624.348 I llm_load_print_meta: n_head_kv        = 1
0.00.624.349 I llm_load_print_meta: n_rot            = 256
0.00.624.350 I llm_load_print_meta: n_swa            = 0
0.00.624.350 I llm_load_print_meta: n_embd_head_k    = 256
0.00.624.350 I llm_load_print_meta: n_embd_head_v    = 256
0.00.624.355 I llm_load_print_meta: n_gqa            = 8
0.00.624.360 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.624.364 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.624.366 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.624.367 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.624.368 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.624.368 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.624.368 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.624.373 I llm_load_print_meta: n_ff             = 16384
0.00.624.374 I llm_load_print_meta: n_expert         = 0
0.00.624.374 I llm_load_print_meta: n_expert_used    = 0
0.00.624.375 I llm_load_print_meta: causal attn      = 1
0.00.624.375 I llm_load_print_meta: pooling type     = 0
0.00.624.375 I llm_load_print_meta: rope type        = 2
0.00.624.376 I llm_load_print_meta: rope scaling     = linear
0.00.624.377 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.624.378 I llm_load_print_meta: freq_scale_train = 1
0.00.624.378 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.624.379 I llm_load_print_meta: rope_finetuned   = unknown
0.00.624.379 I llm_load_print_meta: ssm_d_conv       = 0
0.00.624.379 I llm_load_print_meta: ssm_d_inner      = 0
0.00.624.379 I llm_load_print_meta: ssm_d_state      = 0
0.00.624.380 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.624.380 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.624.381 I llm_load_print_meta: model type       = 2B
0.00.624.382 I llm_load_print_meta: model ftype      = Q8_0
0.00.624.382 I llm_load_print_meta: model params     = 2.51 B
0.00.624.394 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.624.394 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.624.395 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.624.395 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.624.396 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.624.396 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.624.397 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.624.397 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.624.403 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.624.405 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.624.405 I llm_load_print_meta: max token length = 93
0.00.708.582 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.708.592 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.708.593 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.708.594 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.708.595 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.708.596 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.714.520 I llama_new_context_with_model: n_seq_max     = 1
0.00.714.528 I llama_new_context_with_model: n_ctx         = 4096
0.00.714.529 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.714.529 I llama_new_context_with_model: n_batch       = 2048
0.00.714.530 I llama_new_context_with_model: n_ubatch      = 512
0.00.714.530 I llama_new_context_with_model: flash_attn    = 0
0.00.714.533 I llama_new_context_with_model: freq_base     = 10000.0
0.00.714.534 I llama_new_context_with_model: freq_scale    = 1
0.00.714.535 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.731.439 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.731.479 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.731.609 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.734.162 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.734.166 I llama_new_context_with_model: graph nodes  = 601
0.00.734.166 I llama_new_context_with_model: graph splits = 1
0.00.734.191 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.340.646 I main: llama threadpool init, n_threads = 4
0.01.340.661 I 
0.01.340.778 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.340.782 I 
0.01.341.039 I sampler seed: 1038805481
0.01.341.052 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.341.060 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.341.063 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.341.064 I 
 maneuvously, but the wind carried no whispers.

What is the missing element?

The answer is silence.

The passage describes the wind carrying no

0.14.856.638 I llama_perf_sampler_print:    sampling time =      49.19 ms /    33 runs   (    1.49 ms per token,   670.81 tokens per second)
0.14.856.641 I llama_perf_context_print:        load time =    1338.69 ms
0.14.856.653 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.856.656 I llama_perf_context_print:        eval time =   13424.78 ms /    32 runs   (  419.52 ms per token,     2.38 tokens per second)
0.14.856.657 I llama_perf_context_print:       total time =   13516.00 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.660 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.868 I main: llama backend init
0.00.001.898 I main: load the model and apply lora adapter, if any
0.00.023.935 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.946 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.024.037 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.049 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.050 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.056 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.060 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.061 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.062 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.063 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.064 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.070 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.071 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.072 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.073 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.074 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.530 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.496 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.271.175 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.271.188 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.271.189 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.271.190 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.271.191 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.271.193 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.271.194 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.271.198 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.271.199 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.271.200 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.271.201 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.271.202 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.271.212 I llama_model_loader: - type  f32:   37 tensors
0.00.271.214 I llama_model_loader: - type q8_0:  127 tensors
0.00.462.068 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.531.500 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.532.476 I llm_load_vocab: special tokens cache size = 5
0.00.632.134 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.632.206 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.632.207 I llm_load_print_meta: arch             = gemma
0.00.632.208 I llm_load_print_meta: vocab type       = SPM
0.00.632.209 I llm_load_print_meta: n_vocab          = 256000
0.00.632.211 I llm_load_print_meta: n_merges         = 0
0.00.632.212 I llm_load_print_meta: vocab_only       = 0
0.00.632.212 I llm_load_print_meta: n_ctx_train      = 8192
0.00.632.212 I llm_load_print_meta: n_embd           = 2048
0.00.632.213 I llm_load_print_meta: n_layer          = 18
0.00.632.278 I llm_load_print_meta: n_head           = 8
0.00.632.286 I llm_load_print_meta: n_head_kv        = 1
0.00.632.286 I llm_load_print_meta: n_rot            = 256
0.00.632.286 I llm_load_print_meta: n_swa            = 0
0.00.632.287 I llm_load_print_meta: n_embd_head_k    = 256
0.00.632.287 I llm_load_print_meta: n_embd_head_v    = 256
0.00.632.292 I llm_load_print_meta: n_gqa            = 8
0.00.632.297 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.632.301 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.632.303 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.632.328 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.632.329 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.632.330 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.632.330 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.632.336 I llm_load_print_meta: n_ff             = 16384
0.00.632.336 I llm_load_print_meta: n_expert         = 0
0.00.632.337 I llm_load_print_meta: n_expert_used    = 0
0.00.632.337 I llm_load_print_meta: causal attn      = 1
0.00.632.346 I llm_load_print_meta: pooling type     = 0
0.00.632.351 I llm_load_print_meta: rope type        = 2
0.00.632.351 I llm_load_print_meta: rope scaling     = linear
0.00.632.353 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.632.354 I llm_load_print_meta: freq_scale_train = 1
0.00.632.354 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.632.355 I llm_load_print_meta: rope_finetuned   = unknown
0.00.632.355 I llm_load_print_meta: ssm_d_conv       = 0
0.00.632.355 I llm_load_print_meta: ssm_d_inner      = 0
0.00.632.355 I llm_load_print_meta: ssm_d_state      = 0
0.00.632.356 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.632.357 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.632.358 I llm_load_print_meta: model type       = 2B
0.00.632.359 I llm_load_print_meta: model ftype      = Q8_0
0.00.632.360 I llm_load_print_meta: model params     = 2.51 B
0.00.632.370 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.632.371 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.632.372 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.632.372 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.632.373 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.632.373 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.632.373 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.632.374 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.632.379 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.632.380 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.632.381 I llm_load_print_meta: max token length = 93
0.00.704.488 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.704.500 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.710.520 I llama_new_context_with_model: n_seq_max     = 1
0.00.710.527 I llama_new_context_with_model: n_ctx         = 4096
0.00.710.528 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.710.528 I llama_new_context_with_model: n_batch       = 2048
0.00.710.529 I llama_new_context_with_model: n_ubatch      = 512
0.00.710.529 I llama_new_context_with_model: flash_attn    = 0
0.00.710.534 I llama_new_context_with_model: freq_base     = 10000.0
0.00.710.535 I llama_new_context_with_model: freq_scale    = 1
0.00.710.535 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.727.971 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.728.013 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.728.144 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.730.764 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.730.768 I llama_new_context_with_model: graph nodes  = 601
0.00.730.768 I llama_new_context_with_model: graph splits = 1
0.00.730.791 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.335.627 I main: llama threadpool init, n_threads = 4
0.01.335.642 I 
0.01.335.748 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.335.752 I 
0.01.335.985 I sampler seed: 3087175654
0.01.335.997 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.336.004 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.336.007 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.336.007 I 
 increadibly.

I cannot answer this question as it is inappropriate and potentially offensive. [end of text]


0.08.942.082 I llama_perf_sampler_print:    sampling time =      27.75 ms /    19 runs   (    1.46 ms per token,   684.64 tokens per second)
0.08.942.098 I llama_perf_context_print:        load time =    1333.63 ms
0.08.942.101 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.08.942.103 I llama_perf_context_print:        eval time =    7553.82 ms /    18 runs   (  419.66 ms per token,     2.38 tokens per second)
0.08.942.104 I llama_perf_context_print:       total time =    7606.47 ms /    19 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m57.602s
user	3m2.340s
sys	0m9.573s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4078 (dddf3771)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186019.96 ms
main:    total time = 186019.96 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.640 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.838 I main: llama backend init
0.00.001.885 I main: load the model and apply lora adapter, if any
0.00.024.619 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.633 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.733 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.747 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.749 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.755 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.759 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.760 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.761 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.762 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.763 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.771 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.773 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.774 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.775 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.776 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.150.101 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.282 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.913 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.925 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.927 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.928 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.929 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.931 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.932 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.936 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.937 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.938 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.272.939 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.272.941 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.272.950 I llama_model_loader: - type  f32:   37 tensors
0.00.272.953 I llama_model_loader: - type q4_K:  108 tensors
0.00.272.953 I llama_model_loader: - type q6_K:   19 tensors
0.00.480.365 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.549.637 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.550.603 I llm_load_vocab: special tokens cache size = 5
0.00.653.781 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.653.849 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.653.850 I llm_load_print_meta: arch             = gemma
0.00.653.851 I llm_load_print_meta: vocab type       = SPM
0.00.653.852 I llm_load_print_meta: n_vocab          = 256000
0.00.653.854 I llm_load_print_meta: n_merges         = 0
0.00.653.855 I llm_load_print_meta: vocab_only       = 0
0.00.653.855 I llm_load_print_meta: n_ctx_train      = 8192
0.00.653.855 I llm_load_print_meta: n_embd           = 2048
0.00.653.856 I llm_load_print_meta: n_layer          = 18
0.00.653.921 I llm_load_print_meta: n_head           = 8
0.00.653.928 I llm_load_print_meta: n_head_kv        = 1
0.00.653.929 I llm_load_print_meta: n_rot            = 256
0.00.653.929 I llm_load_print_meta: n_swa            = 0
0.00.653.930 I llm_load_print_meta: n_embd_head_k    = 256
0.00.653.930 I llm_load_print_meta: n_embd_head_v    = 256
0.00.653.936 I llm_load_print_meta: n_gqa            = 8
0.00.653.940 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.653.945 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.653.946 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.653.948 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.653.948 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.653.949 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.653.950 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.653.955 I llm_load_print_meta: n_ff             = 16384
0.00.653.956 I llm_load_print_meta: n_expert         = 0
0.00.653.956 I llm_load_print_meta: n_expert_used    = 0
0.00.653.961 I llm_load_print_meta: causal attn      = 1
0.00.653.961 I llm_load_print_meta: pooling type     = 0
0.00.653.961 I llm_load_print_meta: rope type        = 2
0.00.653.962 I llm_load_print_meta: rope scaling     = linear
0.00.653.964 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.653.964 I llm_load_print_meta: freq_scale_train = 1
0.00.653.965 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.653.977 I llm_load_print_meta: rope_finetuned   = unknown
0.00.653.977 I llm_load_print_meta: ssm_d_conv       = 0
0.00.653.978 I llm_load_print_meta: ssm_d_inner      = 0
0.00.653.979 I llm_load_print_meta: ssm_d_state      = 0
0.00.653.980 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.653.980 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.653.981 I llm_load_print_meta: model type       = 2B
0.00.653.983 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.653.984 I llm_load_print_meta: model params     = 2.51 B
0.00.653.993 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.654.005 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.654.007 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.654.008 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.654.011 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.654.012 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.654.012 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.654.013 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.654.019 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.654.021 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.654.021 I llm_load_print_meta: max token length = 93
0.00.716.475 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.716.488 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.716.489 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.716.490 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.716.490 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.716.491 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.722.559 I llama_new_context_with_model: n_seq_max     = 1
0.00.722.569 I llama_new_context_with_model: n_ctx         = 4096
0.00.722.569 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.722.570 I llama_new_context_with_model: n_batch       = 2048
0.00.722.570 I llama_new_context_with_model: n_ubatch      = 512
0.00.722.571 I llama_new_context_with_model: flash_attn    = 0
0.00.722.574 I llama_new_context_with_model: freq_base     = 10000.0
0.00.722.575 I llama_new_context_with_model: freq_scale    = 1
0.00.722.576 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.740.651 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.740.692 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.740.820 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.743.415 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.743.419 I llama_new_context_with_model: graph nodes  = 601
0.00.743.420 I llama_new_context_with_model: graph splits = 1
0.00.743.446 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.332.893 I main: llama threadpool init, n_threads = 4
0.01.332.909 I 
0.01.333.017 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.333.021 I 
0.01.333.249 I sampler seed: 81550542
0.01.333.262 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.333.268 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.333.272 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.333.272 I 
 squaRE.

The text is about the life of a young girl named Maya.

**Maya's Life**

Maya is a bright and curious girl

0.12.470.688 I llama_perf_sampler_print:    sampling time =      49.12 ms /    33 runs   (    1.49 ms per token,   671.82 tokens per second)
0.12.470.691 I llama_perf_context_print:        load time =    1330.91 ms
0.12.470.692 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.470.708 I llama_perf_context_print:        eval time =   11047.44 ms /    32 runs   (  345.23 ms per token,     2.90 tokens per second)
0.12.470.709 I llama_perf_context_print:       total time =   11137.80 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4078 (dddf3771)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 186117.07 ms
main:    total time = 186117.07 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.653 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.835 I main: llama backend init
0.00.001.862 I main: load the model and apply lora adapter, if any
0.00.023.967 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.024.075 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.090 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.095 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.100 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.102 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.103 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.104 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.105 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.106 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.113 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.114 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.115 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.117 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.119 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.222 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.426 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.272.083 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.272.092 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.272.093 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.272.094 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.272.096 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.272.097 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.272.098 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.272.102 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.272.103 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.272.111 I llama_model_loader: - type  f32:   37 tensors
0.00.272.114 I llama_model_loader: - type q4_K:  108 tensors
0.00.272.114 I llama_model_loader: - type q6_K:   19 tensors
0.00.462.536 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.533.918 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.534.985 I llm_load_vocab: special tokens cache size = 5
0.00.632.246 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.632.319 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.632.320 I llm_load_print_meta: arch             = gemma
0.00.632.321 I llm_load_print_meta: vocab type       = SPM
0.00.632.322 I llm_load_print_meta: n_vocab          = 256000
0.00.632.324 I llm_load_print_meta: n_merges         = 0
0.00.632.325 I llm_load_print_meta: vocab_only       = 0
0.00.632.325 I llm_load_print_meta: n_ctx_train      = 8192
0.00.632.326 I llm_load_print_meta: n_embd           = 2048
0.00.632.326 I llm_load_print_meta: n_layer          = 18
0.00.632.392 I llm_load_print_meta: n_head           = 8
0.00.632.399 I llm_load_print_meta: n_head_kv        = 1
0.00.632.400 I llm_load_print_meta: n_rot            = 256
0.00.632.400 I llm_load_print_meta: n_swa            = 0
0.00.632.400 I llm_load_print_meta: n_embd_head_k    = 256
0.00.632.401 I llm_load_print_meta: n_embd_head_v    = 256
0.00.632.405 I llm_load_print_meta: n_gqa            = 8
0.00.632.410 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.632.415 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.632.416 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.632.419 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.632.420 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.632.420 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.632.433 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.632.438 I llm_load_print_meta: n_ff             = 16384
0.00.632.439 I llm_load_print_meta: n_expert         = 0
0.00.632.455 I llm_load_print_meta: n_expert_used    = 0
0.00.632.456 I llm_load_print_meta: causal attn      = 1
0.00.632.456 I llm_load_print_meta: pooling type     = 0
0.00.632.464 I llm_load_print_meta: rope type        = 2
0.00.632.465 I llm_load_print_meta: rope scaling     = linear
0.00.632.467 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.632.475 I llm_load_print_meta: freq_scale_train = 1
0.00.632.476 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.632.476 I llm_load_print_meta: rope_finetuned   = unknown
0.00.632.476 I llm_load_print_meta: ssm_d_conv       = 0
0.00.632.477 I llm_load_print_meta: ssm_d_inner      = 0
0.00.632.478 I llm_load_print_meta: ssm_d_state      = 0
0.00.632.478 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.632.479 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.632.486 I llm_load_print_meta: model type       = 2B
0.00.632.488 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.632.489 I llm_load_print_meta: model params     = 2.51 B
0.00.632.499 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.632.499 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.632.500 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.632.501 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.632.502 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.632.502 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.632.503 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.632.504 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.632.509 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.632.511 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.632.511 I llm_load_print_meta: max token length = 93
0.00.692.805 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.698.587 I llama_new_context_with_model: n_seq_max     = 1
0.00.698.596 I llama_new_context_with_model: n_ctx         = 4096
0.00.698.597 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.698.597 I llama_new_context_with_model: n_batch       = 2048
0.00.698.597 I llama_new_context_with_model: n_ubatch      = 512
0.00.698.598 I llama_new_context_with_model: flash_attn    = 0
0.00.698.601 I llama_new_context_with_model: freq_base     = 10000.0
0.00.698.602 I llama_new_context_with_model: freq_scale    = 1
0.00.698.603 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.717.075 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.717.137 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.717.276 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.719.918 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.719.922 I llama_new_context_with_model: graph nodes  = 601
0.00.719.923 I llama_new_context_with_model: graph splits = 1
0.00.719.947 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.309.655 I main: llama threadpool init, n_threads = 4
0.01.309.674 I 
0.01.309.780 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.309.784 I 
0.01.310.019 I sampler seed: 2116701468
0.01.310.032 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.310.039 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.310.042 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.310.043 I 
 seconary to the first paragraph.

The human body is a complex machine that exhibits a wide range of physical properties. One such property is the ability to sense

0.12.443.518 I llama_perf_sampler_print:    sampling time =      49.28 ms /    33 runs   (    1.49 ms per token,   669.59 tokens per second)
0.12.443.521 I llama_perf_context_print:        load time =    1307.69 ms
0.12.443.543 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.443.548 I llama_perf_context_print:        eval time =   11043.29 ms /    32 runs   (  345.10 ms per token,     2.90 tokens per second)
0.12.443.550 I llama_perf_context_print:       total time =   11133.87 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	6m39.928s
user	46m48.909s
sys	0m6.499s
