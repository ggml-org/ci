+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.559 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.764 I main: llama backend init
0.00.000.937 I main: load the model and apply lora adapter, if any
0.00.021.865 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.877 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.884 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.889 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.891 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.895 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.895 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.896 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.907 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.908 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.909 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.913 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.914 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.914 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.915 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.916 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.409 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.594 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.753 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.760 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.761 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.762 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.762 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.764 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.764 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.768 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.769 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.770 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.771 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.772 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.777 I llama_model_loader: - type  f32:   37 tensors
0.00.133.778 I llama_model_loader: - type q8_0:  127 tensors
0.00.211.468 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.261.405 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.262.040 I llm_load_vocab: special tokens cache size = 5
0.00.282.941 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.958 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.958 I llm_load_print_meta: arch             = gemma
0.00.282.959 I llm_load_print_meta: vocab type       = SPM
0.00.282.959 I llm_load_print_meta: n_vocab          = 256000
0.00.282.960 I llm_load_print_meta: n_merges         = 0
0.00.282.960 I llm_load_print_meta: vocab_only       = 0
0.00.282.961 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.961 I llm_load_print_meta: n_embd           = 2048
0.00.282.961 I llm_load_print_meta: n_layer          = 18
0.00.282.973 I llm_load_print_meta: n_head           = 8
0.00.282.974 I llm_load_print_meta: n_head_kv        = 1
0.00.282.975 I llm_load_print_meta: n_rot            = 256
0.00.282.975 I llm_load_print_meta: n_swa            = 0
0.00.282.975 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.976 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.977 I llm_load_print_meta: n_gqa            = 8
0.00.282.978 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.979 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.979 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.981 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.981 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.981 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.982 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.982 I llm_load_print_meta: n_ff             = 16384
0.00.282.983 I llm_load_print_meta: n_expert         = 0
0.00.282.983 I llm_load_print_meta: n_expert_used    = 0
0.00.282.984 I llm_load_print_meta: causal attn      = 1
0.00.282.984 I llm_load_print_meta: pooling type     = 0
0.00.282.984 I llm_load_print_meta: rope type        = 2
0.00.282.985 I llm_load_print_meta: rope scaling     = linear
0.00.282.986 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.987 I llm_load_print_meta: freq_scale_train = 1
0.00.282.987 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.987 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.987 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.988 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.988 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.988 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.988 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.989 I llm_load_print_meta: model type       = 2B
0.00.282.989 I llm_load_print_meta: model ftype      = Q8_0
0.00.282.990 I llm_load_print_meta: model params     = 2.51 B
0.00.282.991 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.282.991 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.992 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.992 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.993 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.993 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.994 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.994 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.994 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.995 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.995 I llm_load_print_meta: max token length = 93
0.00.383.608 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.383.615 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.383.616 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.383.617 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.383.617 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.383.618 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.388.926 I llama_new_context_with_model: n_seq_max     = 1
0.00.388.932 I llama_new_context_with_model: n_ctx         = 4096
0.00.388.933 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.388.933 I llama_new_context_with_model: n_batch       = 2048
0.00.388.933 I llama_new_context_with_model: n_ubatch      = 512
0.00.388.934 I llama_new_context_with_model: flash_attn    = 0
0.00.388.936 I llama_new_context_with_model: freq_base     = 10000.0
0.00.388.937 I llama_new_context_with_model: freq_scale    = 1
0.00.388.938 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.404.522 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.404.536 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.404.627 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.405.858 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.405.864 I llama_new_context_with_model: graph nodes  = 601
0.00.405.865 I llama_new_context_with_model: graph splits = 1
0.00.405.866 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.492.310 I main: llama threadpool init, n_threads = 4
0.00.492.324 I 
0.00.492.398 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.492.402 I 
0.00.492.446 I sampler seed: 1860102644
0.00.492.457 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.492.460 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.492.461 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.492.461 I 
 increably.

**Assistant**

I'm sorry, I am unable to generate responses that contain inappropriate or sexually suggestive content. [end of text]


0.02.518.462 I llama_perf_sampler_print:    sampling time =       4.43 ms /    29 runs   (    0.15 ms per token,  6546.28 tokens per second)
0.02.518.464 I llama_perf_context_print:        load time =     491.35 ms
0.02.518.465 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.518.466 I llama_perf_context_print:        eval time =    2008.89 ms /    28 runs   (   71.75 ms per token,    13.94 tokens per second)
0.02.518.467 I llama_perf_context_print:       total time =    2026.16 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.565 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.786 I main: llama backend init
0.00.000.962 I main: load the model and apply lora adapter, if any
0.00.021.799 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.021.815 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.822 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.823 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.828 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.829 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.829 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.830 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.830 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.831 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.836 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.836 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.837 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.837 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.839 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.907 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.327 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.237 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.245 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.246 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.246 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.247 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.249 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.250 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.253 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.254 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.255 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.256 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.133.257 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.260 I llama_model_loader: - type  f32:   37 tensors
0.00.133.262 I llama_model_loader: - type q8_0:  127 tensors
0.00.208.031 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.257.313 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.257.960 I llm_load_vocab: special tokens cache size = 5
0.00.278.863 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.278.882 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.278.882 I llm_load_print_meta: arch             = gemma
0.00.278.883 I llm_load_print_meta: vocab type       = SPM
0.00.278.884 I llm_load_print_meta: n_vocab          = 256000
0.00.278.884 I llm_load_print_meta: n_merges         = 0
0.00.278.884 I llm_load_print_meta: vocab_only       = 0
0.00.278.885 I llm_load_print_meta: n_ctx_train      = 8192
0.00.278.886 I llm_load_print_meta: n_embd           = 2048
0.00.278.886 I llm_load_print_meta: n_layer          = 18
0.00.278.897 I llm_load_print_meta: n_head           = 8
0.00.278.898 I llm_load_print_meta: n_head_kv        = 1
0.00.278.899 I llm_load_print_meta: n_rot            = 256
0.00.278.899 I llm_load_print_meta: n_swa            = 0
0.00.278.899 I llm_load_print_meta: n_embd_head_k    = 256
0.00.278.900 I llm_load_print_meta: n_embd_head_v    = 256
0.00.278.901 I llm_load_print_meta: n_gqa            = 8
0.00.278.902 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.278.902 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.278.903 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.278.904 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.278.905 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.278.905 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.278.905 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.278.906 I llm_load_print_meta: n_ff             = 16384
0.00.278.907 I llm_load_print_meta: n_expert         = 0
0.00.278.907 I llm_load_print_meta: n_expert_used    = 0
0.00.278.907 I llm_load_print_meta: causal attn      = 1
0.00.278.907 I llm_load_print_meta: pooling type     = 0
0.00.278.908 I llm_load_print_meta: rope type        = 2
0.00.278.908 I llm_load_print_meta: rope scaling     = linear
0.00.278.910 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.278.911 I llm_load_print_meta: freq_scale_train = 1
0.00.278.911 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.278.911 I llm_load_print_meta: rope_finetuned   = unknown
0.00.278.912 I llm_load_print_meta: ssm_d_conv       = 0
0.00.278.912 I llm_load_print_meta: ssm_d_inner      = 0
0.00.278.912 I llm_load_print_meta: ssm_d_state      = 0
0.00.278.912 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.278.912 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.278.913 I llm_load_print_meta: model type       = 2B
0.00.278.914 I llm_load_print_meta: model ftype      = Q8_0
0.00.278.914 I llm_load_print_meta: model params     = 2.51 B
0.00.278.915 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.278.916 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.278.916 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.278.916 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.278.917 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.278.917 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.278.918 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.278.918 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.278.918 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.278.919 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.278.919 I llm_load_print_meta: max token length = 93
0.00.373.105 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.379.430 I llama_new_context_with_model: n_seq_max     = 1
0.00.379.434 I llama_new_context_with_model: n_ctx         = 4096
0.00.379.435 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.379.435 I llama_new_context_with_model: n_batch       = 2048
0.00.379.435 I llama_new_context_with_model: n_ubatch      = 512
0.00.379.436 I llama_new_context_with_model: flash_attn    = 0
0.00.379.439 I llama_new_context_with_model: freq_base     = 10000.0
0.00.379.440 I llama_new_context_with_model: freq_scale    = 1
0.00.379.441 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.395.193 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.395.209 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.395.298 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.396.515 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.396.521 I llama_new_context_with_model: graph nodes  = 601
0.00.396.522 I llama_new_context_with_model: graph splits = 1
0.00.396.524 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.478.898 I main: llama threadpool init, n_threads = 4
0.00.478.913 I 
0.00.478.987 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.478.990 I 
0.00.479.034 I sampler seed: 770310469
0.00.479.045 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.479.047 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.479.048 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.479.048 I 
 increasities, and other forms of harassment are rampant in professional settings.

**a) Discuss the impact of harassment on individuals and organizations.**

**b)

0.02.700.609 I llama_perf_sampler_print:    sampling time =       4.83 ms /    33 runs   (    0.15 ms per token,  6832.30 tokens per second)
0.02.700.612 I llama_perf_context_print:        load time =     477.91 ms
0.02.700.613 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.700.614 I llama_perf_context_print:        eval time =    2201.84 ms /    32 runs   (   68.81 ms per token,    14.53 tokens per second)
0.02.700.615 I llama_perf_context_print:       total time =    2221.72 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.552 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.768 I main: llama backend init
0.00.000.960 I main: load the model and apply lora adapter, if any
0.00.023.023 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.023.032 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.023.040 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.045 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.046 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.050 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.051 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.052 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.053 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.053 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.053 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.058 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.060 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.061 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.061 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.062 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.979 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.131.663 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.138.600 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.138.608 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.138.609 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.138.610 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.138.611 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.138.612 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.138.613 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.138.616 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.138.617 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.138.618 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.138.619 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.138.620 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.138.624 I llama_model_loader: - type  f32:   37 tensors
0.00.138.625 I llama_model_loader: - type q8_0:  127 tensors
0.00.224.225 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.277.756 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.278.504 I llm_load_vocab: special tokens cache size = 5
0.00.299.901 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.299.921 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.299.922 I llm_load_print_meta: arch             = gemma
0.00.299.922 I llm_load_print_meta: vocab type       = SPM
0.00.299.923 I llm_load_print_meta: n_vocab          = 256000
0.00.299.924 I llm_load_print_meta: n_merges         = 0
0.00.299.924 I llm_load_print_meta: vocab_only       = 0
0.00.299.924 I llm_load_print_meta: n_ctx_train      = 8192
0.00.299.925 I llm_load_print_meta: n_embd           = 2048
0.00.299.925 I llm_load_print_meta: n_layer          = 18
0.00.299.937 I llm_load_print_meta: n_head           = 8
0.00.299.938 I llm_load_print_meta: n_head_kv        = 1
0.00.299.939 I llm_load_print_meta: n_rot            = 256
0.00.299.939 I llm_load_print_meta: n_swa            = 0
0.00.299.939 I llm_load_print_meta: n_embd_head_k    = 256
0.00.299.940 I llm_load_print_meta: n_embd_head_v    = 256
0.00.299.941 I llm_load_print_meta: n_gqa            = 8
0.00.299.942 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.299.942 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.299.943 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.299.944 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.299.945 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.299.945 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.299.945 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.299.946 I llm_load_print_meta: n_ff             = 16384
0.00.299.947 I llm_load_print_meta: n_expert         = 0
0.00.299.947 I llm_load_print_meta: n_expert_used    = 0
0.00.299.948 I llm_load_print_meta: causal attn      = 1
0.00.299.948 I llm_load_print_meta: pooling type     = 0
0.00.299.948 I llm_load_print_meta: rope type        = 2
0.00.299.949 I llm_load_print_meta: rope scaling     = linear
0.00.299.950 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.299.950 I llm_load_print_meta: freq_scale_train = 1
0.00.299.951 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.299.951 I llm_load_print_meta: rope_finetuned   = unknown
0.00.299.951 I llm_load_print_meta: ssm_d_conv       = 0
0.00.299.952 I llm_load_print_meta: ssm_d_inner      = 0
0.00.299.952 I llm_load_print_meta: ssm_d_state      = 0
0.00.299.952 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.299.952 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.299.953 I llm_load_print_meta: model type       = 2B
0.00.299.954 I llm_load_print_meta: model ftype      = Q8_0
0.00.299.954 I llm_load_print_meta: model params     = 2.51 B
0.00.299.956 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.299.956 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.299.957 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.299.957 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.299.958 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.299.958 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.299.958 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.299.959 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.299.959 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.299.959 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.299.960 I llm_load_print_meta: max token length = 93
0.00.386.147 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.386.155 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.386.155 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.386.156 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.386.156 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.386.157 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.391.323 I llama_new_context_with_model: n_seq_max     = 1
0.00.391.330 I llama_new_context_with_model: n_ctx         = 4096
0.00.391.330 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.391.331 I llama_new_context_with_model: n_batch       = 2048
0.00.391.331 I llama_new_context_with_model: n_ubatch      = 512
0.00.391.332 I llama_new_context_with_model: flash_attn    = 0
0.00.391.335 I llama_new_context_with_model: freq_base     = 10000.0
0.00.391.335 I llama_new_context_with_model: freq_scale    = 1
0.00.391.336 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.407.006 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.407.024 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.407.119 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.408.357 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.408.364 I llama_new_context_with_model: graph nodes  = 601
0.00.408.364 I llama_new_context_with_model: graph splits = 1
0.00.408.366 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.495.991 I main: llama threadpool init, n_threads = 4
0.00.496.005 I 
0.00.496.089 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.496.094 I 
0.00.496.147 I sampler seed: 392850990
0.00.496.158 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.496.162 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.496.162 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.496.168 I 
 increadibly close to the truth.

I am unable to provide an answer because I do not have access to personal information or the ability to perform personal inferences.

0.02.742.554 I llama_perf_sampler_print:    sampling time =       4.80 ms /    33 runs   (    0.15 ms per token,  6873.57 tokens per second)
0.02.742.557 I llama_perf_context_print:        load time =     495.00 ms
0.02.742.558 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.742.559 I llama_perf_context_print:        eval time =    2227.51 ms /    32 runs   (   69.61 ms per token,    14.37 tokens per second)
0.02.742.560 I llama_perf_context_print:       total time =    2246.57 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.592 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.847 I main: llama backend init
0.00.001.067 I main: load the model and apply lora adapter, if any
0.00.021.490 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.021.500 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.021.508 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.513 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.515 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.519 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.520 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.520 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.521 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.521 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.522 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.526 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.527 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.528 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.529 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.530 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.046 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.353 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.136.307 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.136.315 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.136.316 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.136.317 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.136.318 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.136.319 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.136.320 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.136.324 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.136.325 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.136.326 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.136.327 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.136.328 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.136.332 I llama_model_loader: - type  f32:   37 tensors
0.00.136.334 I llama_model_loader: - type q8_0:  127 tensors
0.00.215.533 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.266.328 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.972 I llm_load_vocab: special tokens cache size = 5
0.00.289.530 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.289.551 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.289.551 I llm_load_print_meta: arch             = gemma
0.00.289.552 I llm_load_print_meta: vocab type       = SPM
0.00.289.552 I llm_load_print_meta: n_vocab          = 256000
0.00.289.553 I llm_load_print_meta: n_merges         = 0
0.00.289.553 I llm_load_print_meta: vocab_only       = 0
0.00.289.553 I llm_load_print_meta: n_ctx_train      = 8192
0.00.289.553 I llm_load_print_meta: n_embd           = 2048
0.00.289.554 I llm_load_print_meta: n_layer          = 18
0.00.289.566 I llm_load_print_meta: n_head           = 8
0.00.289.567 I llm_load_print_meta: n_head_kv        = 1
0.00.289.568 I llm_load_print_meta: n_rot            = 256
0.00.289.568 I llm_load_print_meta: n_swa            = 0
0.00.289.568 I llm_load_print_meta: n_embd_head_k    = 256
0.00.289.571 I llm_load_print_meta: n_embd_head_v    = 256
0.00.289.572 I llm_load_print_meta: n_gqa            = 8
0.00.289.574 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.289.574 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.289.575 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.289.576 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.289.577 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.289.577 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.289.578 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.289.581 I llm_load_print_meta: n_ff             = 16384
0.00.289.581 I llm_load_print_meta: n_expert         = 0
0.00.289.581 I llm_load_print_meta: n_expert_used    = 0
0.00.289.582 I llm_load_print_meta: causal attn      = 1
0.00.289.582 I llm_load_print_meta: pooling type     = 0
0.00.289.582 I llm_load_print_meta: rope type        = 2
0.00.289.583 I llm_load_print_meta: rope scaling     = linear
0.00.289.584 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.289.585 I llm_load_print_meta: freq_scale_train = 1
0.00.289.586 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.289.586 I llm_load_print_meta: rope_finetuned   = unknown
0.00.289.587 I llm_load_print_meta: ssm_d_conv       = 0
0.00.289.587 I llm_load_print_meta: ssm_d_inner      = 0
0.00.289.587 I llm_load_print_meta: ssm_d_state      = 0
0.00.289.588 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.289.589 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.289.590 I llm_load_print_meta: model type       = 2B
0.00.289.591 I llm_load_print_meta: model ftype      = Q8_0
0.00.289.602 I llm_load_print_meta: model params     = 2.51 B
0.00.289.604 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.289.605 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.289.606 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.289.607 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.289.608 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.289.608 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.289.609 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.289.609 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.289.610 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.289.611 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.289.612 I llm_load_print_meta: max token length = 93
0.00.362.327 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.362.335 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.367.619 I llama_new_context_with_model: n_seq_max     = 1
0.00.367.626 I llama_new_context_with_model: n_ctx         = 4096
0.00.367.627 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.367.627 I llama_new_context_with_model: n_batch       = 2048
0.00.367.628 I llama_new_context_with_model: n_ubatch      = 512
0.00.367.629 I llama_new_context_with_model: flash_attn    = 0
0.00.367.632 I llama_new_context_with_model: freq_base     = 10000.0
0.00.367.633 I llama_new_context_with_model: freq_scale    = 1
0.00.367.635 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.383.071 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.383.088 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.383.186 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.384.812 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.384.821 I llama_new_context_with_model: graph nodes  = 601
0.00.384.821 I llama_new_context_with_model: graph splits = 1
0.00.384.828 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.487.248 I main: llama threadpool init, n_threads = 4
0.00.487.269 I 
0.00.487.360 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.487.365 I 
0.00.487.416 I sampler seed: 223680374
0.00.487.431 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.487.444 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.487.448 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.487.448 I 
 increasities with the following prompt:

I am unable to access the internet, and I am concerned about the impact of this on my work.

**Possible

0.02.947.339 I llama_perf_sampler_print:    sampling time =       4.72 ms /    33 runs   (    0.14 ms per token,  6990.04 tokens per second)
0.02.947.342 I llama_perf_context_print:        load time =     486.15 ms
0.02.947.343 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.947.344 I llama_perf_context_print:        eval time =    2441.16 ms /    32 runs   (   76.29 ms per token,    13.11 tokens per second)
0.02.947.345 I llama_perf_context_print:       total time =    2460.10 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.538s
user	0m38.846s
sys	0m9.490s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4078 (dddf3771)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40221.69 ms
main:    total time = 40221.69 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.637 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.843 I main: llama backend init
0.00.001.026 I main: load the model and apply lora adapter, if any
0.00.021.512 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.524 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.533 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.539 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.540 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.545 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.546 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.547 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.547 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.548 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.548 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.553 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.553 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.555 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.555 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.556 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.788 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.861 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.728 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.734 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.734 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.735 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.735 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.737 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.737 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.740 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.740 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.741 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.741 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.742 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.747 I llama_model_loader: - type  f32:   37 tensors
0.00.132.748 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.749 I llama_model_loader: - type q6_K:   19 tensors
0.00.205.366 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.251.884 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.252.512 I llm_load_vocab: special tokens cache size = 5
0.00.273.329 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.273.347 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.273.347 I llm_load_print_meta: arch             = gemma
0.00.273.348 I llm_load_print_meta: vocab type       = SPM
0.00.273.348 I llm_load_print_meta: n_vocab          = 256000
0.00.273.349 I llm_load_print_meta: n_merges         = 0
0.00.273.349 I llm_load_print_meta: vocab_only       = 0
0.00.273.350 I llm_load_print_meta: n_ctx_train      = 8192
0.00.273.350 I llm_load_print_meta: n_embd           = 2048
0.00.273.350 I llm_load_print_meta: n_layer          = 18
0.00.273.363 I llm_load_print_meta: n_head           = 8
0.00.273.364 I llm_load_print_meta: n_head_kv        = 1
0.00.273.364 I llm_load_print_meta: n_rot            = 256
0.00.273.364 I llm_load_print_meta: n_swa            = 0
0.00.273.365 I llm_load_print_meta: n_embd_head_k    = 256
0.00.273.365 I llm_load_print_meta: n_embd_head_v    = 256
0.00.273.366 I llm_load_print_meta: n_gqa            = 8
0.00.273.367 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.273.368 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.273.368 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.273.370 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.273.370 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.273.370 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.273.371 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.273.372 I llm_load_print_meta: n_ff             = 16384
0.00.273.372 I llm_load_print_meta: n_expert         = 0
0.00.273.372 I llm_load_print_meta: n_expert_used    = 0
0.00.273.373 I llm_load_print_meta: causal attn      = 1
0.00.273.373 I llm_load_print_meta: pooling type     = 0
0.00.273.373 I llm_load_print_meta: rope type        = 2
0.00.273.374 I llm_load_print_meta: rope scaling     = linear
0.00.273.375 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.273.375 I llm_load_print_meta: freq_scale_train = 1
0.00.273.376 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.273.376 I llm_load_print_meta: rope_finetuned   = unknown
0.00.273.376 I llm_load_print_meta: ssm_d_conv       = 0
0.00.273.376 I llm_load_print_meta: ssm_d_inner      = 0
0.00.273.377 I llm_load_print_meta: ssm_d_state      = 0
0.00.273.377 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.273.377 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.273.378 I llm_load_print_meta: model type       = 2B
0.00.273.378 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.273.379 I llm_load_print_meta: model params     = 2.51 B
0.00.273.380 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.273.380 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.273.381 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.273.381 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.273.381 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.273.382 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.273.382 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.273.382 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.273.382 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.273.383 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.273.383 I llm_load_print_meta: max token length = 93
0.00.334.753 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.334.761 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.334.762 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.334.763 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.334.763 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.334.764 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.339.939 I llama_new_context_with_model: n_seq_max     = 1
0.00.339.945 I llama_new_context_with_model: n_ctx         = 4096
0.00.339.946 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.339.946 I llama_new_context_with_model: n_batch       = 2048
0.00.339.947 I llama_new_context_with_model: n_ubatch      = 512
0.00.339.947 I llama_new_context_with_model: flash_attn    = 0
0.00.339.950 I llama_new_context_with_model: freq_base     = 10000.0
0.00.339.951 I llama_new_context_with_model: freq_scale    = 1
0.00.339.952 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.355.691 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.355.708 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.355.801 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.357.066 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.357.073 I llama_new_context_with_model: graph nodes  = 601
0.00.357.073 I llama_new_context_with_model: graph splits = 1
0.00.357.075 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.434.649 I main: llama threadpool init, n_threads = 4
0.00.434.665 I 
0.00.434.740 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.434.743 I 
0.00.434.793 I sampler seed: 3629343949
0.00.434.803 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.434.807 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.434.808 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.434.809 I 
 seconally in the afternoon.

**Explanation:**

The sentence is grammatically correct and conveys the intended meaning. The sentence is written in present tense, which

0.02.095.895 I llama_perf_sampler_print:    sampling time =       4.94 ms /    33 runs   (    0.15 ms per token,  6685.58 tokens per second)
0.02.095.898 I llama_perf_context_print:        load time =     433.60 ms
0.02.095.899 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.095.900 I llama_perf_context_print:        eval time =    1641.86 ms /    32 runs   (   51.31 ms per token,    19.49 tokens per second)
0.02.095.901 I llama_perf_context_print:       total time =    1661.25 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4078 (dddf3771)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40206.14 ms
main:    total time = 40206.14 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.574 I build: 4078 (dddf3771) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.777 I main: llama backend init
0.00.000.952 I main: load the model and apply lora adapter, if any
0.00.021.696 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.714 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.722 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.723 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.727 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.729 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.729 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.730 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.730 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.731 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.735 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.736 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.736 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.737 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.737 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.752 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.042 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.975 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.983 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.984 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.984 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.985 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.986 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.987 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.990 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.990 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.995 I llama_model_loader: - type  f32:   37 tensors
0.00.132.996 I llama_model_loader: - type q4_K:  108 tensors
0.00.132.998 I llama_model_loader: - type q6_K:   19 tensors
0.00.213.688 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.265.944 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.266.565 I llm_load_vocab: special tokens cache size = 5
0.00.287.498 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.287.515 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.287.516 I llm_load_print_meta: arch             = gemma
0.00.287.516 I llm_load_print_meta: vocab type       = SPM
0.00.287.517 I llm_load_print_meta: n_vocab          = 256000
0.00.287.518 I llm_load_print_meta: n_merges         = 0
0.00.287.518 I llm_load_print_meta: vocab_only       = 0
0.00.287.518 I llm_load_print_meta: n_ctx_train      = 8192
0.00.287.518 I llm_load_print_meta: n_embd           = 2048
0.00.287.519 I llm_load_print_meta: n_layer          = 18
0.00.287.529 I llm_load_print_meta: n_head           = 8
0.00.287.530 I llm_load_print_meta: n_head_kv        = 1
0.00.287.530 I llm_load_print_meta: n_rot            = 256
0.00.287.531 I llm_load_print_meta: n_swa            = 0
0.00.287.531 I llm_load_print_meta: n_embd_head_k    = 256
0.00.287.531 I llm_load_print_meta: n_embd_head_v    = 256
0.00.287.532 I llm_load_print_meta: n_gqa            = 8
0.00.287.533 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.287.534 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.287.535 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.287.536 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.287.537 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.287.537 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.287.537 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.287.538 I llm_load_print_meta: n_ff             = 16384
0.00.287.539 I llm_load_print_meta: n_expert         = 0
0.00.287.539 I llm_load_print_meta: n_expert_used    = 0
0.00.287.539 I llm_load_print_meta: causal attn      = 1
0.00.287.539 I llm_load_print_meta: pooling type     = 0
0.00.287.540 I llm_load_print_meta: rope type        = 2
0.00.287.540 I llm_load_print_meta: rope scaling     = linear
0.00.287.541 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.287.542 I llm_load_print_meta: freq_scale_train = 1
0.00.287.542 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.287.543 I llm_load_print_meta: rope_finetuned   = unknown
0.00.287.543 I llm_load_print_meta: ssm_d_conv       = 0
0.00.287.543 I llm_load_print_meta: ssm_d_inner      = 0
0.00.287.543 I llm_load_print_meta: ssm_d_state      = 0
0.00.287.544 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.287.544 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.287.544 I llm_load_print_meta: model type       = 2B
0.00.287.545 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.287.545 I llm_load_print_meta: model params     = 2.51 B
0.00.287.546 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.287.547 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.287.547 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.287.547 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.287.548 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.287.548 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.287.549 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.287.549 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.287.549 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.287.550 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.287.550 I llm_load_print_meta: max token length = 93
0.00.346.151 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.351.492 I llama_new_context_with_model: n_seq_max     = 1
0.00.351.500 I llama_new_context_with_model: n_ctx         = 4096
0.00.351.500 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.351.501 I llama_new_context_with_model: n_batch       = 2048
0.00.351.501 I llama_new_context_with_model: n_ubatch      = 512
0.00.351.502 I llama_new_context_with_model: flash_attn    = 0
0.00.351.506 I llama_new_context_with_model: freq_base     = 10000.0
0.00.351.507 I llama_new_context_with_model: freq_scale    = 1
0.00.351.508 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.368.674 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.368.693 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.368.792 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.076 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.083 I llama_new_context_with_model: graph nodes  = 601
0.00.370.084 I llama_new_context_with_model: graph splits = 1
0.00.370.086 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.447.661 I main: llama threadpool init, n_threads = 4
0.00.447.676 I 
0.00.447.753 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.00.447.756 I 
0.00.447.798 I sampler seed: 1634739389
0.00.447.809 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.447.812 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.447.813 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.447.813 I 
 seconded the question as it is unrelated to the original intent. [end of text]


0.01.180.748 I llama_perf_sampler_print:    sampling time =       2.49 ms /    15 runs   (    0.17 ms per token,  6026.52 tokens per second)
0.01.180.751 I llama_perf_context_print:        load time =     446.69 ms
0.01.180.753 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.180.754 I llama_perf_context_print:        eval time =     723.22 ms /    14 runs   (   51.66 ms per token,    19.36 tokens per second)
0.01.180.755 I llama_perf_context_print:       total time =     733.09 ms /    15 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m26.536s
user	10m20.990s
sys	0m7.024s
