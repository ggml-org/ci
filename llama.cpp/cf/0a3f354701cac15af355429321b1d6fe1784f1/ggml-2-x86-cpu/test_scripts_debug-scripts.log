+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.654 I build: 4029 (cf0a3f35) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.851 I main: llama backend init
0.00.001.110 I main: load the model and apply lora adapter, if any
0.00.024.349 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.359 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.457 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.470 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.472 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.478 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.483 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.485 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.488 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.489 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.491 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.500 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.502 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.504 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.506 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.508 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.661 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.419 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.809 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.821 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.823 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.825 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.826 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.828 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.830 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.835 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.846 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.850 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.852 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.267.854 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.863 I llama_model_loader: - type  f32:   37 tensors
0.00.267.865 I llama_model_loader: - type q8_0:  127 tensors
0.00.467.530 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.534.685 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.535.639 I llm_load_vocab: special tokens cache size = 5
0.00.629.783 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.629.867 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.629.871 I llm_load_print_meta: arch             = gemma
0.00.629.872 I llm_load_print_meta: vocab type       = SPM
0.00.629.873 I llm_load_print_meta: n_vocab          = 256000
0.00.629.875 I llm_load_print_meta: n_merges         = 0
0.00.629.876 I llm_load_print_meta: vocab_only       = 0
0.00.629.877 I llm_load_print_meta: n_ctx_train      = 8192
0.00.629.885 I llm_load_print_meta: n_embd           = 2048
0.00.629.886 I llm_load_print_meta: n_layer          = 18
0.00.629.955 I llm_load_print_meta: n_head           = 8
0.00.629.968 I llm_load_print_meta: n_head_kv        = 1
0.00.629.969 I llm_load_print_meta: n_rot            = 256
0.00.629.969 I llm_load_print_meta: n_swa            = 0
0.00.629.970 I llm_load_print_meta: n_embd_head_k    = 256
0.00.629.970 I llm_load_print_meta: n_embd_head_v    = 256
0.00.629.978 I llm_load_print_meta: n_gqa            = 8
0.00.629.985 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.629.995 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.629.997 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.629.999 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.630.000 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.630.001 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.630.002 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.630.009 I llm_load_print_meta: n_ff             = 16384
0.00.630.010 I llm_load_print_meta: n_expert         = 0
0.00.630.011 I llm_load_print_meta: n_expert_used    = 0
0.00.630.011 I llm_load_print_meta: causal attn      = 1
0.00.630.012 I llm_load_print_meta: pooling type     = 0
0.00.630.013 I llm_load_print_meta: rope type        = 2
0.00.630.014 I llm_load_print_meta: rope scaling     = linear
0.00.630.019 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.630.020 I llm_load_print_meta: freq_scale_train = 1
0.00.630.021 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.630.022 I llm_load_print_meta: rope_finetuned   = unknown
0.00.630.022 I llm_load_print_meta: ssm_d_conv       = 0
0.00.630.023 I llm_load_print_meta: ssm_d_inner      = 0
0.00.630.023 I llm_load_print_meta: ssm_d_state      = 0
0.00.630.024 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.630.024 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.630.026 I llm_load_print_meta: model type       = 2B
0.00.630.028 I llm_load_print_meta: model ftype      = Q8_0
0.00.630.029 I llm_load_print_meta: model params     = 2.51 B
0.00.630.040 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.630.041 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.630.043 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.630.043 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.630.044 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.630.045 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.630.046 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.630.049 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.630.056 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.630.058 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.630.059 I llm_load_print_meta: max token length = 93
0.00.732.060 I llm_load_tensors: CPU_Mapped model buffer size =   865.98 MiB
0.00.732.074 I llm_load_tensors: CPU_Mapped model buffer size =   334.74 MiB
0.00.732.075 I llm_load_tensors: CPU_Mapped model buffer size =   402.73 MiB
0.00.732.076 I llm_load_tensors: CPU_Mapped model buffer size =   335.27 MiB
0.00.732.078 I llm_load_tensors: CPU_Mapped model buffer size =   338.98 MiB
0.00.732.079 I llm_load_tensors: CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.738.397 I llama_new_context_with_model: n_seq_max     = 1
0.00.738.406 I llama_new_context_with_model: n_ctx         = 4096
0.00.738.406 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.738.407 I llama_new_context_with_model: n_batch       = 2048
0.00.738.407 I llama_new_context_with_model: n_ubatch      = 512
0.00.738.408 I llama_new_context_with_model: flash_attn    = 0
0.00.738.411 I llama_new_context_with_model: freq_base     = 10000.0
0.00.738.412 I llama_new_context_with_model: freq_scale    = 1
0.00.738.413 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.755.363 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.755.407 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.755.538 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.758.233 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.758.237 I llama_new_context_with_model: graph nodes  = 601
0.00.758.238 I llama_new_context_with_model: graph splits = 1
0.00.758.268 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.364.008 I main: llama threadpool init, n_threads = 4
0.01.364.024 I 
0.01.364.148 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.364.151 I 
0.01.364.409 I sampler seed: 2818256163
0.01.364.424 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.364.433 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.364.434 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.364.435 I 
 increasities? [end of text]


0.03.060.481 I llama_perf_sampler_print:    sampling time =       6.28 ms /     5 runs   (    1.26 ms per token,   796.69 tokens per second)
0.03.060.484 I llama_perf_context_print:        load time =    1362.80 ms
0.03.060.485 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.03.060.486 I llama_perf_context_print:        eval time =    1683.58 ms /     4 runs   (  420.90 ms per token,     2.38 tokens per second)
0.03.060.487 I llama_perf_context_print:       total time =    1696.48 ms /     5 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.661 I build: 4029 (cf0a3f35) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.920 I main: llama backend init
0.00.001.188 I main: load the model and apply lora adapter, if any
0.00.024.161 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.024.268 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.296 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.299 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.305 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.307 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.309 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.311 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.313 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.316 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.324 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.330 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.332 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.334 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.335 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.149.497 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.249.277 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.267.576 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.267.589 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.267.590 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.267.591 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.267.592 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.267.593 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.267.594 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.267.599 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.267.601 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.267.602 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.267.603 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.267.604 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.267.615 I llama_model_loader: - type  f32:   37 tensors
0.00.267.617 I llama_model_loader: - type q8_0:  127 tensors
0.00.469.961 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.541.360 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.542.415 I llm_load_vocab: special tokens cache size = 5
0.00.646.497 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.646.605 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.646.611 I llm_load_print_meta: arch             = gemma
0.00.646.612 I llm_load_print_meta: vocab type       = SPM
0.00.646.613 I llm_load_print_meta: n_vocab          = 256000
0.00.646.616 I llm_load_print_meta: n_merges         = 0
0.00.646.616 I llm_load_print_meta: vocab_only       = 0
0.00.646.617 I llm_load_print_meta: n_ctx_train      = 8192
0.00.646.618 I llm_load_print_meta: n_embd           = 2048
0.00.646.618 I llm_load_print_meta: n_layer          = 18
0.00.646.689 I llm_load_print_meta: n_head           = 8
0.00.646.712 I llm_load_print_meta: n_head_kv        = 1
0.00.646.716 I llm_load_print_meta: n_rot            = 256
0.00.646.717 I llm_load_print_meta: n_swa            = 0
0.00.646.717 I llm_load_print_meta: n_embd_head_k    = 256
0.00.646.718 I llm_load_print_meta: n_embd_head_v    = 256
0.00.646.729 I llm_load_print_meta: n_gqa            = 8
0.00.646.737 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.646.747 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.646.750 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.646.755 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.646.756 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.646.756 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.646.757 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.646.764 I llm_load_print_meta: n_ff             = 16384
0.00.646.766 I llm_load_print_meta: n_expert         = 0
0.00.646.767 I llm_load_print_meta: n_expert_used    = 0
0.00.646.775 I llm_load_print_meta: causal attn      = 1
0.00.646.776 I llm_load_print_meta: pooling type     = 0
0.00.646.780 I llm_load_print_meta: rope type        = 2
0.00.646.781 I llm_load_print_meta: rope scaling     = linear
0.00.646.783 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.646.783 I llm_load_print_meta: freq_scale_train = 1
0.00.646.784 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.646.784 I llm_load_print_meta: rope_finetuned   = unknown
0.00.646.785 I llm_load_print_meta: ssm_d_conv       = 0
0.00.646.786 I llm_load_print_meta: ssm_d_inner      = 0
0.00.646.786 I llm_load_print_meta: ssm_d_state      = 0
0.00.646.786 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.646.787 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.646.788 I llm_load_print_meta: model type       = 2B
0.00.646.789 I llm_load_print_meta: model ftype      = Q8_0
0.00.646.793 I llm_load_print_meta: model params     = 2.51 B
0.00.646.804 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.646.805 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.646.806 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.646.807 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.646.808 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.646.808 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.646.809 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.646.810 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.646.818 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.646.820 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.646.820 I llm_load_print_meta: max token length = 93
0.00.744.979 I llm_load_tensors: CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.751.301 I llama_new_context_with_model: n_seq_max     = 1
0.00.751.308 I llama_new_context_with_model: n_ctx         = 4096
0.00.751.308 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.751.309 I llama_new_context_with_model: n_batch       = 2048
0.00.751.309 I llama_new_context_with_model: n_ubatch      = 512
0.00.751.309 I llama_new_context_with_model: flash_attn    = 0
0.00.751.313 I llama_new_context_with_model: freq_base     = 10000.0
0.00.751.314 I llama_new_context_with_model: freq_scale    = 1
0.00.751.314 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.768.972 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.769.017 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.769.153 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.771.695 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.771.698 I llama_new_context_with_model: graph nodes  = 601
0.00.771.699 I llama_new_context_with_model: graph splits = 1
0.00.771.726 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.380.034 I main: llama threadpool init, n_threads = 4
0.01.380.047 I 
0.01.380.165 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.380.169 I 
0.01.380.418 I sampler seed: 264600075
0.01.380.433 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.380.446 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.380.447 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.380.449 I 
 seconary axis in a satellite's orbit. [end of text]


0.06.036.361 I llama_perf_sampler_print:    sampling time =      16.94 ms /    12 runs   (    1.41 ms per token,   708.22 tokens per second)
0.06.036.376 I llama_perf_context_print:        load time =    1378.74 ms
0.06.036.378 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.06.036.379 I llama_perf_context_print:        eval time =    4624.07 ms /    11 runs   (  420.37 ms per token,     2.38 tokens per second)
0.06.036.380 I llama_perf_context_print:       total time =    4656.34 ms /    12 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.698 I build: 4029 (cf0a3f35) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.908 I main: llama backend init
0.00.001.176 I main: load the model and apply lora adapter, if any
0.00.024.002 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.024.015 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.024.126 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.139 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.141 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.146 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.149 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.157 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.162 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.165 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.166 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.176 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.181 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.183 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.185 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.024.190 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.783 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.481 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.624 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.635 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.636 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.637 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.638 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.640 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.641 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.645 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.646 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.647 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.648 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.266.649 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.657 I llama_model_loader: - type  f32:   37 tensors
0.00.266.660 I llama_model_loader: - type q8_0:  127 tensors
0.00.457.711 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.529.016 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.530.133 I llm_load_vocab: special tokens cache size = 5
0.00.624.300 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.624.373 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.624.377 I llm_load_print_meta: arch             = gemma
0.00.624.378 I llm_load_print_meta: vocab type       = SPM
0.00.624.379 I llm_load_print_meta: n_vocab          = 256000
0.00.624.381 I llm_load_print_meta: n_merges         = 0
0.00.624.382 I llm_load_print_meta: vocab_only       = 0
0.00.624.382 I llm_load_print_meta: n_ctx_train      = 8192
0.00.624.382 I llm_load_print_meta: n_embd           = 2048
0.00.624.383 I llm_load_print_meta: n_layer          = 18
0.00.624.447 I llm_load_print_meta: n_head           = 8
0.00.624.458 I llm_load_print_meta: n_head_kv        = 1
0.00.624.460 I llm_load_print_meta: n_rot            = 256
0.00.624.460 I llm_load_print_meta: n_swa            = 0
0.00.624.461 I llm_load_print_meta: n_embd_head_k    = 256
0.00.624.461 I llm_load_print_meta: n_embd_head_v    = 256
0.00.624.466 I llm_load_print_meta: n_gqa            = 8
0.00.624.470 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.624.476 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.624.477 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.624.479 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.624.479 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.624.479 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.624.481 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.624.486 I llm_load_print_meta: n_ff             = 16384
0.00.624.487 I llm_load_print_meta: n_expert         = 0
0.00.624.487 I llm_load_print_meta: n_expert_used    = 0
0.00.624.488 I llm_load_print_meta: causal attn      = 1
0.00.624.488 I llm_load_print_meta: pooling type     = 0
0.00.624.488 I llm_load_print_meta: rope type        = 2
0.00.624.491 I llm_load_print_meta: rope scaling     = linear
0.00.624.493 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.624.493 I llm_load_print_meta: freq_scale_train = 1
0.00.624.494 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.624.494 I llm_load_print_meta: rope_finetuned   = unknown
0.00.624.494 I llm_load_print_meta: ssm_d_conv       = 0
0.00.624.495 I llm_load_print_meta: ssm_d_inner      = 0
0.00.624.495 I llm_load_print_meta: ssm_d_state      = 0
0.00.624.495 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.624.495 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.624.496 I llm_load_print_meta: model type       = 2B
0.00.624.497 I llm_load_print_meta: model ftype      = Q8_0
0.00.624.498 I llm_load_print_meta: model params     = 2.51 B
0.00.624.507 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.624.508 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.624.508 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.624.509 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.624.509 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.624.510 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.624.511 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.624.511 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.624.517 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.624.519 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.624.519 I llm_load_print_meta: max token length = 93
0.00.719.770 I llm_load_tensors: CPU_Mapped model buffer size =   967.99 MiB
0.00.719.782 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.719.783 I llm_load_tensors: CPU_Mapped model buffer size =   411.77 MiB
0.00.719.784 I llm_load_tensors: CPU_Mapped model buffer size =   437.27 MiB
0.00.719.785 I llm_load_tensors: CPU_Mapped model buffer size =   344.30 MiB
0.00.719.785 I llm_load_tensors: CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.725.999 I llama_new_context_with_model: n_seq_max     = 1
0.00.726.007 I llama_new_context_with_model: n_ctx         = 4096
0.00.726.007 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.726.008 I llama_new_context_with_model: n_batch       = 2048
0.00.726.008 I llama_new_context_with_model: n_ubatch      = 512
0.00.726.008 I llama_new_context_with_model: flash_attn    = 0
0.00.726.011 I llama_new_context_with_model: freq_base     = 10000.0
0.00.726.011 I llama_new_context_with_model: freq_scale    = 1
0.00.726.012 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.742.675 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.742.714 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.742.837 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.745.323 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.745.327 I llama_new_context_with_model: graph nodes  = 601
0.00.745.328 I llama_new_context_with_model: graph splits = 1
0.00.745.351 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.358.905 I main: llama threadpool init, n_threads = 4
0.01.358.919 I 
0.01.359.036 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.359.041 I 
0.01.359.276 I sampler seed: 909720523
0.01.359.290 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.359.296 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.359.300 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.359.300 I 
 increasels.

**Answer:**
The context does not contain any information about what is being referred to as "crepusculaires", so I am unable

0.14.934.083 I llama_perf_sampler_print:    sampling time =      49.77 ms /    33 runs   (    1.51 ms per token,   663.10 tokens per second)
0.14.934.086 I llama_perf_context_print:        load time =    1357.61 ms
0.14.934.088 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.934.089 I llama_perf_context_print:        eval time =   13482.83 ms /    32 runs   (  421.34 ms per token,     2.37 tokens per second)
0.14.934.090 I llama_perf_context_print:       total time =   13575.19 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.665 I build: 4029 (cf0a3f35) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.872 I main: llama backend init
0.00.001.136 I main: load the model and apply lora adapter, if any
0.00.023.407 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.023.419 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.023.521 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.534 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.536 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.541 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.546 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.548 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.550 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.552 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.554 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.563 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.568 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.569 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.571 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.023.574 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.147.696 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.247.362 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.265.613 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.265.627 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.265.628 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.265.629 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.265.630 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.265.632 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.265.633 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.265.637 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.265.638 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.265.639 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.265.667 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.265.673 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.265.684 I llama_model_loader: - type  f32:   37 tensors
0.00.265.687 I llama_model_loader: - type q8_0:  127 tensors
0.00.450.334 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.514.806 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.515.793 I llm_load_vocab: special tokens cache size = 5
0.00.610.177 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.610.251 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.610.253 I llm_load_print_meta: arch             = gemma
0.00.610.253 I llm_load_print_meta: vocab type       = SPM
0.00.610.254 I llm_load_print_meta: n_vocab          = 256000
0.00.610.256 I llm_load_print_meta: n_merges         = 0
0.00.610.257 I llm_load_print_meta: vocab_only       = 0
0.00.610.257 I llm_load_print_meta: n_ctx_train      = 8192
0.00.610.258 I llm_load_print_meta: n_embd           = 2048
0.00.610.258 I llm_load_print_meta: n_layer          = 18
0.00.610.323 I llm_load_print_meta: n_head           = 8
0.00.610.330 I llm_load_print_meta: n_head_kv        = 1
0.00.610.331 I llm_load_print_meta: n_rot            = 256
0.00.610.331 I llm_load_print_meta: n_swa            = 0
0.00.610.332 I llm_load_print_meta: n_embd_head_k    = 256
0.00.610.332 I llm_load_print_meta: n_embd_head_v    = 256
0.00.610.337 I llm_load_print_meta: n_gqa            = 8
0.00.610.341 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.610.346 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.610.347 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.610.349 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.610.349 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.610.350 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.610.350 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.610.355 I llm_load_print_meta: n_ff             = 16384
0.00.610.356 I llm_load_print_meta: n_expert         = 0
0.00.610.356 I llm_load_print_meta: n_expert_used    = 0
0.00.610.356 I llm_load_print_meta: causal attn      = 1
0.00.610.357 I llm_load_print_meta: pooling type     = 0
0.00.610.357 I llm_load_print_meta: rope type        = 2
0.00.610.357 I llm_load_print_meta: rope scaling     = linear
0.00.610.359 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.610.359 I llm_load_print_meta: freq_scale_train = 1
0.00.610.360 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.610.360 I llm_load_print_meta: rope_finetuned   = unknown
0.00.610.360 I llm_load_print_meta: ssm_d_conv       = 0
0.00.610.360 I llm_load_print_meta: ssm_d_inner      = 0
0.00.610.361 I llm_load_print_meta: ssm_d_state      = 0
0.00.610.361 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.610.361 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.610.362 I llm_load_print_meta: model type       = 2B
0.00.610.363 I llm_load_print_meta: model ftype      = Q8_0
0.00.610.363 I llm_load_print_meta: model params     = 2.51 B
0.00.610.374 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.610.374 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.610.375 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.610.375 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.610.376 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.610.376 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.610.376 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.610.377 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.610.405 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.610.407 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.610.407 I llm_load_print_meta: max token length = 93
0.00.683.659 I llm_load_tensors: CPU_Mapped model buffer size =  1904.18 MiB
0.00.683.671 I llm_load_tensors: CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.689.855 I llama_new_context_with_model: n_seq_max     = 1
0.00.689.862 I llama_new_context_with_model: n_ctx         = 4096
0.00.689.863 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.689.863 I llama_new_context_with_model: n_batch       = 2048
0.00.689.864 I llama_new_context_with_model: n_ubatch      = 512
0.00.689.864 I llama_new_context_with_model: flash_attn    = 0
0.00.689.867 I llama_new_context_with_model: freq_base     = 10000.0
0.00.689.868 I llama_new_context_with_model: freq_scale    = 1
0.00.689.868 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.706.294 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.706.331 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.706.457 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.709.033 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.709.037 I llama_new_context_with_model: graph nodes  = 601
0.00.709.038 I llama_new_context_with_model: graph splits = 1
0.00.709.063 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.316.318 I main: llama threadpool init, n_threads = 4
0.01.316.332 I 
0.01.316.445 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.316.449 I 
0.01.316.715 I sampler seed: 2284232774
0.01.316.727 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.316.736 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.316.740 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.316.741 I 
 increasities. 

That's not appropriate language. Please rewrite the response.

I am unable to provide a response that contains inappropriate or disrespectful language.

0.14.911.056 I llama_perf_sampler_print:    sampling time =      49.13 ms /    33 runs   (    1.49 ms per token,   671.71 tokens per second)
0.14.911.061 I llama_perf_context_print:        load time =    1315.09 ms
0.14.911.062 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.14.911.064 I llama_perf_context_print:        eval time =   13503.36 ms /    32 runs   (  421.98 ms per token,     2.37 tokens per second)
0.14.911.065 I llama_perf_context_print:       total time =   13594.75 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m48.820s
user	2m26.794s
sys	0m9.615s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-debug/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q --show-progress -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4029 (cf0a3f35)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199032.87 ms
main:    total time = 199032.87 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.651 I build: 4029 (cf0a3f35) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.845 I main: llama backend init
0.00.001.111 I main: load the model and apply lora adapter, if any
0.00.024.483 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.024.493 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.024.590 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.024.602 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.024.604 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.024.610 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.024.614 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.024.615 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.024.616 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.024.617 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.024.618 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.024.625 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.024.626 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.024.628 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.024.629 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.630 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.398 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.192 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.263 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.273 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.274 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.275 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.276 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.278 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.279 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.283 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.284 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.285 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.266.286 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.266.287 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.266.296 I llama_model_loader: - type  f32:   37 tensors
0.00.266.298 I llama_model_loader: - type q4_K:  108 tensors
0.00.266.299 I llama_model_loader: - type q6_K:   19 tensors
0.00.467.312 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.537.641 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.538.653 I llm_load_vocab: special tokens cache size = 5
0.00.632.713 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.632.787 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.632.788 I llm_load_print_meta: arch             = gemma
0.00.632.788 I llm_load_print_meta: vocab type       = SPM
0.00.632.789 I llm_load_print_meta: n_vocab          = 256000
0.00.632.792 I llm_load_print_meta: n_merges         = 0
0.00.632.792 I llm_load_print_meta: vocab_only       = 0
0.00.632.793 I llm_load_print_meta: n_ctx_train      = 8192
0.00.632.793 I llm_load_print_meta: n_embd           = 2048
0.00.632.794 I llm_load_print_meta: n_layer          = 18
0.00.632.860 I llm_load_print_meta: n_head           = 8
0.00.632.867 I llm_load_print_meta: n_head_kv        = 1
0.00.632.868 I llm_load_print_meta: n_rot            = 256
0.00.632.868 I llm_load_print_meta: n_swa            = 0
0.00.632.868 I llm_load_print_meta: n_embd_head_k    = 256
0.00.632.869 I llm_load_print_meta: n_embd_head_v    = 256
0.00.632.873 I llm_load_print_meta: n_gqa            = 8
0.00.632.878 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.632.883 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.632.884 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.632.886 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.632.886 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.632.887 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.632.887 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.632.892 I llm_load_print_meta: n_ff             = 16384
0.00.632.893 I llm_load_print_meta: n_expert         = 0
0.00.632.893 I llm_load_print_meta: n_expert_used    = 0
0.00.632.894 I llm_load_print_meta: causal attn      = 1
0.00.632.894 I llm_load_print_meta: pooling type     = 0
0.00.632.894 I llm_load_print_meta: rope type        = 2
0.00.632.895 I llm_load_print_meta: rope scaling     = linear
0.00.632.896 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.632.897 I llm_load_print_meta: freq_scale_train = 1
0.00.632.897 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.632.898 I llm_load_print_meta: rope_finetuned   = unknown
0.00.632.898 I llm_load_print_meta: ssm_d_conv       = 0
0.00.632.898 I llm_load_print_meta: ssm_d_inner      = 0
0.00.632.898 I llm_load_print_meta: ssm_d_state      = 0
0.00.632.899 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.632.899 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.632.900 I llm_load_print_meta: model type       = 2B
0.00.632.901 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.632.901 I llm_load_print_meta: model params     = 2.51 B
0.00.632.912 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.632.912 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.632.913 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.632.913 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.632.914 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.632.914 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.632.915 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.632.915 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.632.921 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.632.923 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.632.923 I llm_load_print_meta: max token length = 93
0.00.697.039 I llm_load_tensors: CPU_Mapped model buffer size =   604.15 MiB
0.00.697.048 I llm_load_tensors: CPU_Mapped model buffer size =   185.62 MiB
0.00.697.049 I llm_load_tensors: CPU_Mapped model buffer size =   221.61 MiB
0.00.697.049 I llm_load_tensors: CPU_Mapped model buffer size =   185.89 MiB
0.00.697.050 I llm_load_tensors: CPU_Mapped model buffer size =   187.86 MiB
0.00.697.050 I llm_load_tensors: CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.702.969 I llama_new_context_with_model: n_seq_max     = 1
0.00.702.978 I llama_new_context_with_model: n_ctx         = 4096
0.00.702.978 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.702.979 I llama_new_context_with_model: n_batch       = 2048
0.00.702.979 I llama_new_context_with_model: n_ubatch      = 512
0.00.702.980 I llama_new_context_with_model: flash_attn    = 0
0.00.702.983 I llama_new_context_with_model: freq_base     = 10000.0
0.00.702.984 I llama_new_context_with_model: freq_scale    = 1
0.00.702.985 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.720.102 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.720.140 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.720.262 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.722.792 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.722.796 I llama_new_context_with_model: graph nodes  = 601
0.00.722.796 I llama_new_context_with_model: graph splits = 1
0.00.722.822 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.295.125 I main: llama threadpool init, n_threads = 4
0.01.295.137 I 
0.01.295.248 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.295.251 I 
0.01.295.480 I sampler seed: 3015610238
0.01.295.493 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.295.499 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.295.502 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.295.503 I 
 squaRED (Scalable, Reliable, Scalable, Uptime, and Energy Efficient)

**Features:**

* **Scalable architecture:** Handles massive workloads

0.12.190.859 I llama_perf_sampler_print:    sampling time =      49.22 ms /    33 runs   (    1.49 ms per token,   670.40 tokens per second)
0.12.190.862 I llama_perf_context_print:        load time =    1293.92 ms
0.12.190.864 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.190.877 I llama_perf_context_print:        eval time =   10804.30 ms /    32 runs   (  337.63 ms per token,     2.96 tokens per second)
0.12.190.879 I llama_perf_context_print:       total time =   10895.74 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4029 (cf0a3f35)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 199184.00 ms
main:    total time = 199184.00 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-debug/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
register_backend: registered backend CPU (1 devices)
register_device: registered device CPU (Intel(R) Xeon(R) Platinum 8370C CPU @ 2.80GHz)
0.00.000.656 I build: 4029 (cf0a3f35) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu (debug)
0.00.000.870 I main: llama backend init
0.00.001.144 I main: load the model and apply lora adapter, if any
0.00.023.838 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.023.953 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.023.969 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.023.970 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.023.975 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.023.977 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.023.979 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.023.981 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.023.982 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.023.984 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.023.993 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.023.995 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.023.997 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.023.999 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.024.004 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.148.651 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.248.228 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.266.444 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.266.454 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.266.456 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.266.457 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.266.458 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.266.459 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.266.460 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.266.465 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.266.465 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.266.475 I llama_model_loader: - type  f32:   37 tensors
0.00.266.477 I llama_model_loader: - type q4_K:  108 tensors
0.00.266.478 I llama_model_loader: - type q6_K:   19 tensors
0.00.468.379 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.535.544 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.536.596 I llm_load_vocab: special tokens cache size = 5
0.00.634.644 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.634.715 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.634.716 I llm_load_print_meta: arch             = gemma
0.00.634.717 I llm_load_print_meta: vocab type       = SPM
0.00.634.718 I llm_load_print_meta: n_vocab          = 256000
0.00.634.721 I llm_load_print_meta: n_merges         = 0
0.00.634.721 I llm_load_print_meta: vocab_only       = 0
0.00.634.721 I llm_load_print_meta: n_ctx_train      = 8192
0.00.634.722 I llm_load_print_meta: n_embd           = 2048
0.00.634.722 I llm_load_print_meta: n_layer          = 18
0.00.634.787 I llm_load_print_meta: n_head           = 8
0.00.634.794 I llm_load_print_meta: n_head_kv        = 1
0.00.634.795 I llm_load_print_meta: n_rot            = 256
0.00.634.795 I llm_load_print_meta: n_swa            = 0
0.00.634.797 I llm_load_print_meta: n_embd_head_k    = 256
0.00.634.798 I llm_load_print_meta: n_embd_head_v    = 256
0.00.634.802 I llm_load_print_meta: n_gqa            = 8
0.00.634.807 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.634.812 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.634.814 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.634.815 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.634.816 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.634.816 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.634.817 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.634.822 I llm_load_print_meta: n_ff             = 16384
0.00.634.823 I llm_load_print_meta: n_expert         = 0
0.00.634.824 I llm_load_print_meta: n_expert_used    = 0
0.00.634.825 I llm_load_print_meta: causal attn      = 1
0.00.634.826 I llm_load_print_meta: pooling type     = 0
0.00.634.826 I llm_load_print_meta: rope type        = 2
0.00.634.827 I llm_load_print_meta: rope scaling     = linear
0.00.634.836 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.634.837 I llm_load_print_meta: freq_scale_train = 1
0.00.634.837 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.634.838 I llm_load_print_meta: rope_finetuned   = unknown
0.00.634.839 I llm_load_print_meta: ssm_d_conv       = 0
0.00.634.841 I llm_load_print_meta: ssm_d_inner      = 0
0.00.634.842 I llm_load_print_meta: ssm_d_state      = 0
0.00.634.842 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.634.843 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.634.844 I llm_load_print_meta: model type       = 2B
0.00.634.846 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.634.846 I llm_load_print_meta: model params     = 2.51 B
0.00.634.858 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.634.861 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.634.862 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.634.862 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.634.864 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.634.864 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.634.865 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.634.866 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.634.873 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.634.875 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.634.876 I llm_load_print_meta: max token length = 93
0.00.695.778 I llm_load_tensors: CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.701.814 I llama_new_context_with_model: n_seq_max     = 1
0.00.701.821 I llama_new_context_with_model: n_ctx         = 4096
0.00.701.822 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.701.822 I llama_new_context_with_model: n_batch       = 2048
0.00.701.822 I llama_new_context_with_model: n_ubatch      = 512
0.00.701.823 I llama_new_context_with_model: flash_attn    = 0
0.00.701.826 I llama_new_context_with_model: freq_base     = 10000.0
0.00.701.827 I llama_new_context_with_model: freq_scale    = 1
0.00.701.828 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.718.727 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.718.768 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.718.890 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.721.467 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.721.470 I llama_new_context_with_model: graph nodes  = 601
0.00.721.471 I llama_new_context_with_model: graph splits = 1
0.00.721.494 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.01.296.101 I main: llama threadpool init, n_threads = 4
0.01.296.113 I 
0.01.296.235 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | AVX = 1 | AVX_VNNI = 0 | AVX2 = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | AVX512_BF16 = 0 | AMX_INT8 = 0 | FMA = 1 | NEON = 0 | SVE = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | RISCV_VECT = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | SSSE3 = 1 | VSX = 0 | MATMUL_INT8 = 0 | LLAMAFILE = 1 | 
0.01.296.239 I 
0.01.296.484 I sampler seed: 1115903189
0.01.296.497 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = -1
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.01.296.504 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.01.296.508 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.01.296.508 I 
 increasities?

I cannot answer this question as it is sexually suggestive in nature. I am not allowed to provide responses that are sexually suggestive in nature. [end of text]


0.12.192.919 I llama_perf_sampler_print:    sampling time =      49.00 ms /    33 runs   (    1.48 ms per token,   673.47 tokens per second)
0.12.192.923 I llama_perf_context_print:        load time =    1294.86 ms
0.12.192.925 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.12.192.927 I llama_perf_context_print:        eval time =   10806.70 ms /    32 runs   (  337.71 ms per token,     2.96 tokens per second)
0.12.192.928 I llama_perf_context_print:       total time =   10896.83 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	7m5.474s
user	50m9.036s
sys	0m6.605s
