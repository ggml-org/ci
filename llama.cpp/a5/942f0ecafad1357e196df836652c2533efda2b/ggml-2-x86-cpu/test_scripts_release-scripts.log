+ cd ./examples/gguf-split
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/gguf-split
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/gguf-split
+ rm -f '/mnt/llama.cpp/models/gguf-split/ggml-model-split*.gguf' '/mnt/llama.cpp/models/gguf-split/ggml-model-merge*.gguf'
+ cd /mnt/llama.cpp/models/gguf-split
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/gguf-split/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf --n-predict 32
0.00.000.193 I build: 4412 (a5942f0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.388 I main: llama backend init
0.00.000.394 I main: load the model and apply lora adapter, if any
0.00.021.008 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.021.021 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.021.030 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.037 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.038 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.041 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.042 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.043 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.044 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.045 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.045 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.050 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.052 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.053 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.053 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.021.054 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.205 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.125.339 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.132.274 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.132.280 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.132.281 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.132.282 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.132.282 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.132.284 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.132.285 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.132.288 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.132.289 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.132.289 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.132.290 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.132.291 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.132.295 I llama_model_loader: - type  f32:   37 tensors
0.00.132.296 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.191 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.242.731 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.243.220 I llm_load_vocab: special tokens cache size = 5
0.00.264.063 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.264.079 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.264.081 I llm_load_print_meta: arch             = gemma
0.00.264.082 I llm_load_print_meta: vocab type       = SPM
0.00.264.082 I llm_load_print_meta: n_vocab          = 256000
0.00.264.083 I llm_load_print_meta: n_merges         = 0
0.00.264.083 I llm_load_print_meta: vocab_only       = 0
0.00.264.083 I llm_load_print_meta: n_ctx_train      = 8192
0.00.264.084 I llm_load_print_meta: n_embd           = 2048
0.00.264.084 I llm_load_print_meta: n_layer          = 18
0.00.264.093 I llm_load_print_meta: n_head           = 8
0.00.264.095 I llm_load_print_meta: n_head_kv        = 1
0.00.264.096 I llm_load_print_meta: n_rot            = 256
0.00.264.096 I llm_load_print_meta: n_swa            = 0
0.00.264.096 I llm_load_print_meta: n_embd_head_k    = 256
0.00.264.096 I llm_load_print_meta: n_embd_head_v    = 256
0.00.264.098 I llm_load_print_meta: n_gqa            = 8
0.00.264.100 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.264.101 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.264.102 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.264.103 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.264.104 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.264.104 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.264.104 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.264.106 I llm_load_print_meta: n_ff             = 16384
0.00.264.106 I llm_load_print_meta: n_expert         = 0
0.00.264.106 I llm_load_print_meta: n_expert_used    = 0
0.00.264.107 I llm_load_print_meta: causal attn      = 1
0.00.264.107 I llm_load_print_meta: pooling type     = 0
0.00.264.107 I llm_load_print_meta: rope type        = 2
0.00.264.108 I llm_load_print_meta: rope scaling     = linear
0.00.264.109 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.264.110 I llm_load_print_meta: freq_scale_train = 1
0.00.264.110 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.264.111 I llm_load_print_meta: rope_finetuned   = unknown
0.00.264.111 I llm_load_print_meta: ssm_d_conv       = 0
0.00.264.111 I llm_load_print_meta: ssm_d_inner      = 0
0.00.264.112 I llm_load_print_meta: ssm_d_state      = 0
0.00.264.112 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.264.112 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.264.114 I llm_load_print_meta: model type       = 2B
0.00.264.115 I llm_load_print_meta: model ftype      = Q8_0
0.00.264.116 I llm_load_print_meta: model params     = 2.51 B
0.00.264.116 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.264.117 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.264.117 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.264.118 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.264.118 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.264.118 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.264.118 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.264.119 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.264.119 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.264.120 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.264.120 I llm_load_print_meta: max token length = 93
0.00.365.518 I llm_load_tensors:   CPU_Mapped model buffer size =   865.98 MiB
0.00.365.526 I llm_load_tensors:   CPU_Mapped model buffer size =   334.74 MiB
0.00.365.527 I llm_load_tensors:   CPU_Mapped model buffer size =   402.73 MiB
0.00.365.528 I llm_load_tensors:   CPU_Mapped model buffer size =   335.27 MiB
0.00.365.528 I llm_load_tensors:   CPU_Mapped model buffer size =   338.98 MiB
0.00.365.529 I llm_load_tensors:   CPU_Mapped model buffer size =   261.96 MiB
..............................................................
0.00.370.703 I llama_new_context_with_model: n_seq_max     = 1
0.00.370.709 I llama_new_context_with_model: n_ctx         = 4096
0.00.370.709 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.370.709 I llama_new_context_with_model: n_batch       = 2048
0.00.370.710 I llama_new_context_with_model: n_ubatch      = 512
0.00.370.710 I llama_new_context_with_model: flash_attn    = 0
0.00.370.713 I llama_new_context_with_model: freq_base     = 10000.0
0.00.370.713 I llama_new_context_with_model: freq_scale    = 1
0.00.370.715 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.370.734 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.384.833 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.384.846 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.384.945 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.386.209 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.386.216 I llama_new_context_with_model: graph nodes  = 601
0.00.386.216 I llama_new_context_with_model: graph splits = 1
0.00.386.219 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.386.220 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.471.187 I main: llama threadpool init, n_threads = 4
0.00.471.201 I 
0.00.471.271 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.471.275 I 
0.00.471.308 I sampler seed: 598262062
0.00.471.319 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.471.331 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.471.335 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.471.335 I 
 secon, 2016.

**Title: "The Power of Storytelling: Connecting with Your Audience Through Narrative"**

**Abstract:**

Story

0.02.719.062 I llama_perf_sampler_print:    sampling time =       4.88 ms /    33 runs   (    0.15 ms per token,  6763.68 tokens per second)
0.02.719.064 I llama_perf_context_print:        load time =     470.77 ms
0.02.719.065 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.719.066 I llama_perf_context_print:        eval time =    2229.43 ms /    32 runs   (   69.67 ms per token,    14.35 tokens per second)
0.02.719.067 I llama_perf_context_print:       total time =    2247.88 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --merge /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf -> /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: reading metadata /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf ...[3Ddone
gguf_merge: writing tensors /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf ...[3Ddone
gguf_merge: /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf merged from 6 split with 164 tensors.
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf --n-predict 32
0.00.000.553 I build: 4412 (a5942f0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.730 I main: llama backend init
0.00.000.738 I main: load the model and apply lora adapter, if any
0.00.020.820 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf (version GGUF V3 (latest))
0.00.020.835 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.843 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.846 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.848 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.849 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.850 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.851 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.851 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.852 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.855 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.856 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.857 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.858 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.859 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.169 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.123.364 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.130.262 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.130.267 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.130.268 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.130.269 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.130.270 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.130.271 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.130.272 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.130.276 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.130.276 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.130.277 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.130.278 I llama_model_loader: - kv  25:                                split.count u16              = 0
0.00.130.279 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.130.282 I llama_model_loader: - type  f32:   37 tensors
0.00.130.283 I llama_model_loader: - type q8_0:  127 tensors
0.00.216.717 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.270.215 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.270.883 I llm_load_vocab: special tokens cache size = 5
0.00.292.057 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.292.074 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.292.075 I llm_load_print_meta: arch             = gemma
0.00.292.076 I llm_load_print_meta: vocab type       = SPM
0.00.292.077 I llm_load_print_meta: n_vocab          = 256000
0.00.292.077 I llm_load_print_meta: n_merges         = 0
0.00.292.077 I llm_load_print_meta: vocab_only       = 0
0.00.292.078 I llm_load_print_meta: n_ctx_train      = 8192
0.00.292.078 I llm_load_print_meta: n_embd           = 2048
0.00.292.078 I llm_load_print_meta: n_layer          = 18
0.00.292.090 I llm_load_print_meta: n_head           = 8
0.00.292.092 I llm_load_print_meta: n_head_kv        = 1
0.00.292.092 I llm_load_print_meta: n_rot            = 256
0.00.292.093 I llm_load_print_meta: n_swa            = 0
0.00.292.093 I llm_load_print_meta: n_embd_head_k    = 256
0.00.292.094 I llm_load_print_meta: n_embd_head_v    = 256
0.00.292.095 I llm_load_print_meta: n_gqa            = 8
0.00.292.097 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.292.098 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.292.100 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.292.101 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.292.101 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.292.101 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.292.102 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.292.103 I llm_load_print_meta: n_ff             = 16384
0.00.292.103 I llm_load_print_meta: n_expert         = 0
0.00.292.104 I llm_load_print_meta: n_expert_used    = 0
0.00.292.104 I llm_load_print_meta: causal attn      = 1
0.00.292.104 I llm_load_print_meta: pooling type     = 0
0.00.292.105 I llm_load_print_meta: rope type        = 2
0.00.292.105 I llm_load_print_meta: rope scaling     = linear
0.00.292.107 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.292.107 I llm_load_print_meta: freq_scale_train = 1
0.00.292.108 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.292.108 I llm_load_print_meta: rope_finetuned   = unknown
0.00.292.108 I llm_load_print_meta: ssm_d_conv       = 0
0.00.292.109 I llm_load_print_meta: ssm_d_inner      = 0
0.00.292.109 I llm_load_print_meta: ssm_d_state      = 0
0.00.292.109 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.292.109 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.292.111 I llm_load_print_meta: model type       = 2B
0.00.292.112 I llm_load_print_meta: model ftype      = Q8_0
0.00.292.113 I llm_load_print_meta: model params     = 2.51 B
0.00.292.114 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.292.114 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.292.115 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.292.115 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.292.116 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.292.116 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.292.117 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.292.117 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.292.117 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.292.118 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.292.118 I llm_load_print_meta: max token length = 93
0.00.388.456 I llm_load_tensors:   CPU_Mapped model buffer size =  2539.66 MiB
..............................................................
0.00.393.598 I llama_new_context_with_model: n_seq_max     = 1
0.00.393.603 I llama_new_context_with_model: n_ctx         = 4096
0.00.393.604 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.393.604 I llama_new_context_with_model: n_batch       = 2048
0.00.393.605 I llama_new_context_with_model: n_ubatch      = 512
0.00.393.605 I llama_new_context_with_model: flash_attn    = 0
0.00.393.607 I llama_new_context_with_model: freq_base     = 10000.0
0.00.393.608 I llama_new_context_with_model: freq_scale    = 1
0.00.393.609 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.393.628 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.408.229 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.408.240 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.408.334 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.409.616 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.409.622 I llama_new_context_with_model: graph nodes  = 601
0.00.409.623 I llama_new_context_with_model: graph splits = 1
0.00.409.626 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.409.626 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.490.884 I main: llama threadpool init, n_threads = 4
0.00.490.900 I 
0.00.490.971 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.490.974 I 
0.00.491.006 I sampler seed: 1413522275
0.00.491.017 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.491.029 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.491.033 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.491.033 I 
 increasively.

I am curious about your experiences in your field, and I would love to hear about any challenges or triumphs you have had along the way.

0.02.678.522 I llama_perf_sampler_print:    sampling time =       5.17 ms /    33 runs   (    0.16 ms per token,  6382.98 tokens per second)
0.02.678.525 I llama_perf_context_print:        load time =     490.13 ms
0.02.678.526 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.678.527 I llama_perf_context_print:        eval time =    2168.84 ms /    32 runs   (   67.78 ms per token,    14.75 tokens per second)
0.02.678.528 I llama_perf_context_print:       total time =    2187.65 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 32 --no-tensor-first-split /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors
n_split: 7
split 00001: n_tensors = 0, total_size = 6M
split 00002: n_tensors = 32, total_size = 1015M
split 00003: n_tensors = 32, total_size = 361M
split 00004: n_tensors = 32, total_size = 431M
split 00005: n_tensors = 32, total_size = 458M
split 00006: n_tensors = 32, total_size = 361M
split 00007: n_tensors = 4, total_size = 35M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf ... gguf_split: 7 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf --n-predict 32
0.00.000.179 I build: 4412 (a5942f0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.376 I main: llama backend init
0.00.000.382 I main: load the model and apply lora adapter, if any
0.00.020.541 I llama_model_loader: additional 6 GGUFs metadata loaded.
0.00.020.552 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf (version GGUF V3 (latest))
0.00.020.559 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.566 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.568 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.570 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.571 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.572 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.573 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.573 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.574 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.577 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.579 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.579 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.580 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.580 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.048.345 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.144 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.073 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.080 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.081 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.082 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.083 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.084 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.084 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.087 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.088 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.088 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.131.089 I llama_model_loader: - kv  25:                                split.count u16              = 7
0.00.131.089 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.131.094 I llama_model_loader: - type  f32:   37 tensors
0.00.131.095 I llama_model_loader: - type q8_0:  127 tensors
0.00.207.532 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.066 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.250.666 I llm_load_vocab: special tokens cache size = 5
0.00.271.994 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.013 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.014 I llm_load_print_meta: arch             = gemma
0.00.272.015 I llm_load_print_meta: vocab type       = SPM
0.00.272.016 I llm_load_print_meta: n_vocab          = 256000
0.00.272.017 I llm_load_print_meta: n_merges         = 0
0.00.272.017 I llm_load_print_meta: vocab_only       = 0
0.00.272.017 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.018 I llm_load_print_meta: n_embd           = 2048
0.00.272.018 I llm_load_print_meta: n_layer          = 18
0.00.272.029 I llm_load_print_meta: n_head           = 8
0.00.272.031 I llm_load_print_meta: n_head_kv        = 1
0.00.272.031 I llm_load_print_meta: n_rot            = 256
0.00.272.032 I llm_load_print_meta: n_swa            = 0
0.00.272.032 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.032 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.034 I llm_load_print_meta: n_gqa            = 8
0.00.272.035 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.037 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.038 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.039 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.040 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.040 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.040 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.042 I llm_load_print_meta: n_ff             = 16384
0.00.272.042 I llm_load_print_meta: n_expert         = 0
0.00.272.043 I llm_load_print_meta: n_expert_used    = 0
0.00.272.043 I llm_load_print_meta: causal attn      = 1
0.00.272.043 I llm_load_print_meta: pooling type     = 0
0.00.272.044 I llm_load_print_meta: rope type        = 2
0.00.272.044 I llm_load_print_meta: rope scaling     = linear
0.00.272.045 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.046 I llm_load_print_meta: freq_scale_train = 1
0.00.272.046 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.046 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.047 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.047 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.047 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.047 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.048 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.049 I llm_load_print_meta: model type       = 2B
0.00.272.051 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.051 I llm_load_print_meta: model params     = 2.51 B
0.00.272.052 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.052 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.053 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.053 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.054 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.054 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.054 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.055 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.055 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.055 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.055 I llm_load_print_meta: max token length = 93
0.00.349.211 I llm_load_tensors:   CPU_Mapped model buffer size =   967.99 MiB
0.00.349.219 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.219 I llm_load_tensors:   CPU_Mapped model buffer size =   411.77 MiB
0.00.349.220 I llm_load_tensors:   CPU_Mapped model buffer size =   437.27 MiB
0.00.349.221 I llm_load_tensors:   CPU_Mapped model buffer size =   344.30 MiB
0.00.349.221 I llm_load_tensors:   CPU_Mapped model buffer size =    34.02 MiB
..............................................................
0.00.354.323 I llama_new_context_with_model: n_seq_max     = 1
0.00.354.329 I llama_new_context_with_model: n_ctx         = 4096
0.00.354.329 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.354.330 I llama_new_context_with_model: n_batch       = 2048
0.00.354.330 I llama_new_context_with_model: n_ubatch      = 512
0.00.354.331 I llama_new_context_with_model: flash_attn    = 0
0.00.354.333 I llama_new_context_with_model: freq_base     = 10000.0
0.00.354.334 I llama_new_context_with_model: freq_scale    = 1
0.00.354.335 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.354.354 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.368.944 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.368.956 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.369.050 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.370.283 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.370.290 I llama_new_context_with_model: graph nodes  = 601
0.00.370.291 I llama_new_context_with_model: graph splits = 1
0.00.370.294 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.370.294 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.454.878 I main: llama threadpool init, n_threads = 4
0.00.454.893 I 
0.00.454.964 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.454.966 I 
0.00.454.997 I sampler seed: 3732118033
0.00.455.008 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.455.020 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.455.024 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.455.024 I 
 increamically.

I was going to write a program to perform a simple task, but I got stuck. I am unable to move forward because I am unable

0.02.707.810 I llama_perf_sampler_print:    sampling time =       4.74 ms /    33 runs   (    0.14 ms per token,  6962.03 tokens per second)
0.02.707.815 I llama_perf_context_print:        load time =     454.48 ms
0.02.707.816 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.707.817 I llama_perf_context_print:        eval time =    2234.79 ms /    32 runs   (   69.84 ms per token,    14.32 tokens per second)
0.02.707.818 I llama_perf_context_print:       total time =    2252.94 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-size 2G /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G
n_split: 2
split 00001: n_tensors = 109, total_size = 2002M
split 00002: n_tensors = 55, total_size = 666M
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf ... done
Writing file /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf ... gguf_split: 2 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf --n-predict 32
0.00.000.549 I build: 4412 (a5942f0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.749 I main: llama backend init
0.00.000.758 I main: load the model and apply lora adapter, if any
0.00.020.869 I llama_model_loader: additional 1 GGUFs metadata loaded.
0.00.020.880 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf (version GGUF V3 (latest))
0.00.020.888 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.020.894 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.020.897 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.020.900 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.020.901 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.020.902 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.020.903 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.020.903 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.020.904 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.020.907 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.020.908 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.020.908 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.020.909 I llama_model_loader: - kv  11:                          general.file_type u32              = 7
0.00.020.909 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.555 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.127.546 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.134.494 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.134.501 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.134.502 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.134.502 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.134.503 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.134.504 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.134.505 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.134.507 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.134.508 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.134.509 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.134.509 I llama_model_loader: - kv  25:                                split.count u16              = 2
0.00.134.510 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.134.514 I llama_model_loader: - type  f32:   37 tensors
0.00.134.516 I llama_model_loader: - type q8_0:  127 tensors
0.00.210.456 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.250.827 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.251.356 I llm_load_vocab: special tokens cache size = 5
0.00.272.550 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.272.571 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.272.572 I llm_load_print_meta: arch             = gemma
0.00.272.573 I llm_load_print_meta: vocab type       = SPM
0.00.272.573 I llm_load_print_meta: n_vocab          = 256000
0.00.272.574 I llm_load_print_meta: n_merges         = 0
0.00.272.574 I llm_load_print_meta: vocab_only       = 0
0.00.272.575 I llm_load_print_meta: n_ctx_train      = 8192
0.00.272.575 I llm_load_print_meta: n_embd           = 2048
0.00.272.575 I llm_load_print_meta: n_layer          = 18
0.00.272.586 I llm_load_print_meta: n_head           = 8
0.00.272.589 I llm_load_print_meta: n_head_kv        = 1
0.00.272.589 I llm_load_print_meta: n_rot            = 256
0.00.272.589 I llm_load_print_meta: n_swa            = 0
0.00.272.590 I llm_load_print_meta: n_embd_head_k    = 256
0.00.272.590 I llm_load_print_meta: n_embd_head_v    = 256
0.00.272.592 I llm_load_print_meta: n_gqa            = 8
0.00.272.594 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.272.595 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.272.596 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.272.598 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.272.598 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.272.598 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.272.598 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.272.600 I llm_load_print_meta: n_ff             = 16384
0.00.272.600 I llm_load_print_meta: n_expert         = 0
0.00.272.601 I llm_load_print_meta: n_expert_used    = 0
0.00.272.601 I llm_load_print_meta: causal attn      = 1
0.00.272.601 I llm_load_print_meta: pooling type     = 0
0.00.272.602 I llm_load_print_meta: rope type        = 2
0.00.272.602 I llm_load_print_meta: rope scaling     = linear
0.00.272.603 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.272.604 I llm_load_print_meta: freq_scale_train = 1
0.00.272.604 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.272.605 I llm_load_print_meta: rope_finetuned   = unknown
0.00.272.605 I llm_load_print_meta: ssm_d_conv       = 0
0.00.272.605 I llm_load_print_meta: ssm_d_inner      = 0
0.00.272.605 I llm_load_print_meta: ssm_d_state      = 0
0.00.272.606 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.272.606 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.272.607 I llm_load_print_meta: model type       = 2B
0.00.272.609 I llm_load_print_meta: model ftype      = Q8_0
0.00.272.609 I llm_load_print_meta: model params     = 2.51 B
0.00.272.610 I llm_load_print_meta: model size       = 2.48 GiB (8.50 BPW) 
0.00.272.611 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.272.611 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.272.611 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.272.612 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.272.612 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.272.612 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.272.612 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.272.613 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.272.613 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.272.613 I llm_load_print_meta: max token length = 93
0.00.347.342 I llm_load_tensors:   CPU_Mapped model buffer size =  1904.18 MiB
0.00.347.348 I llm_load_tensors:   CPU_Mapped model buffer size =   635.48 MiB
..............................................................
0.00.352.484 I llama_new_context_with_model: n_seq_max     = 1
0.00.352.491 I llama_new_context_with_model: n_ctx         = 4096
0.00.352.492 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.352.492 I llama_new_context_with_model: n_batch       = 2048
0.00.352.492 I llama_new_context_with_model: n_ubatch      = 512
0.00.352.493 I llama_new_context_with_model: flash_attn    = 0
0.00.352.496 I llama_new_context_with_model: freq_base     = 10000.0
0.00.352.497 I llama_new_context_with_model: freq_scale    = 1
0.00.352.497 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.352.517 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.366.811 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.366.825 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.366.917 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.368.180 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.368.188 I llama_new_context_with_model: graph nodes  = 601
0.00.368.188 I llama_new_context_with_model: graph splits = 1
0.00.368.192 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.368.192 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.457.580 I main: llama threadpool init, n_threads = 4
0.00.457.596 I 
0.00.457.675 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.457.680 I 
0.00.457.723 I sampler seed: 75641459
0.00.457.735 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.457.739 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.457.740 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.457.742 I 
 increasities is a natural consequence of a healthy immune system, but excessive or uncontrolled inflammation can lead to chronic inflammation and various health problems. [end of text]


0.02.578.913 I llama_perf_sampler_print:    sampling time =       4.35 ms /    29 runs   (    0.15 ms per token,  6666.67 tokens per second)
0.02.578.916 I llama_perf_context_print:        load time =     456.80 ms
0.02.578.917 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.578.919 I llama_perf_context_print:        eval time =    2103.79 ms /    28 runs   (   75.14 ms per token,    13.31 tokens per second)
0.02.578.919 I llama_perf_context_print:       total time =    2121.34 ms /    29 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/gguf-split/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00001-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-2G-00002-of-00002.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00001-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00002-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00003-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00004-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00005-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00006-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-split-32-tensors-00007-of-00007.gguf /mnt/llama.cpp/models/gguf-split/ggml-model-merge.gguf

real	0m20.112s
user	0m38.074s
sys	0m9.386s
+ cd ./examples/quantize
+ bash tests.sh /home/ggml/work/llama.cpp/build-ci-release/bin /mnt/llama.cpp/models
+ SPLIT=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split
+ QUANTIZE=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize
+ MAIN=/home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli
+ WORK_PATH=/mnt/llama.cpp/models/quantize
+++ dirname tests.sh
++ realpath ./../../
+ ROOT_DIR=/home/ggml/work/llama.cpp
+ mkdir -p /mnt/llama.cpp/models/quantize
+ rm -f '/mnt/llama.cpp/models/quantize/ggml-model-split*.gguf' '/mnt/llama.cpp/models/quantize/ggml-model-requant*.gguf'
+ cd /mnt/llama.cpp/models/quantize
+ /home/ggml/work/llama.cpp/scripts/hf.sh --repo ggml-org/gemma-1.1-2b-it-Q8_0-GGUF --file gemma-1.1-2b-it.Q8_0.gguf
[+] attempting to download gemma-1.1-2b-it.Q8_0.gguf
[+] wget -q -c -O ./gemma-1.1-2b-it.Q8_0.gguf https://huggingface.co/ggml-org/gemma-1.1-2b-it-Q8_0-GGUF/resolve/main/gemma-1.1-2b-it.Q8_0.gguf
./gemma-1.1-2b-it.Q8_0.gguf
+ echo PASS
PASS
+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-gguf-split --split-max-tensors 28 /mnt/llama.cpp/models/quantize/gemma-1.1-2b-it.Q8_0.gguf /mnt/llama.cpp/models/quantize/ggml-model-split
n_split: 6
split 00001: n_tensors = 28, total_size = 914M
split 00002: n_tensors = 28, total_size = 351M
split 00003: n_tensors = 28, total_size = 422M
split 00004: n_tensors = 28, total_size = 351M
split 00005: n_tensors = 28, total_size = 355M
split 00006: n_tensors = 24, total_size = 274M
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf ... done
Writing file /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf ... gguf_split: 6 gguf split written with a total of 164 tensors.
done
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize --keep-split /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant.gguf Q4_K
main: build = 4412 (a5942f0e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   2/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   3/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   4/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   5/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[   6/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   7/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   8/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   9/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  10/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  11/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  12/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  13/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  14/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  15/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  16/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  17/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  18/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  19/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  20/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  21/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  22/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  23/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  24/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  25/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  27/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  28/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  29/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  30/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  31/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  32/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  33/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  34/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  36/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  37/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  38/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  39/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  40/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  41/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  42/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  43/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  44/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  45/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  46/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  47/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  48/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  49/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  50/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  51/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  52/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  54/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  55/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  56/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  57/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  58/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  59/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  60/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  61/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  63/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  64/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  65/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  66/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  67/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  68/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  69/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  70/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  71/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  72/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  73/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  74/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  75/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  76/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  77/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  78/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  79/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  81/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  82/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  83/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  85/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  86/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  90/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  92/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  94/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  95/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  99/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 100/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 101/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 103/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 104/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 108/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 110/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 112/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 113/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 117/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 119/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 121/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 122/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 126/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 127/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 128/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 130/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 131/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 135/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 137/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 139/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 140/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 144/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 145/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 146/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 148/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 149/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 153/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 154/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 155/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 157/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 158/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 162/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40255.37 ms
main:    total time = 40255.37 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf --n-predict 32
0.00.000.568 I build: 4412 (a5942f0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.760 I main: llama backend init
0.00.000.768 I main: load the model and apply lora adapter, if any
0.00.022.178 I llama_model_loader: additional 5 GGUFs metadata loaded.
0.00.022.191 I llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf (version GGUF V3 (latest))
0.00.022.200 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.022.206 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.022.207 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.022.210 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.022.211 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.022.211 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.022.212 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.022.213 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.022.213 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.022.218 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.022.219 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.022.219 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.022.220 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.022.220 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.050.083 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.126.106 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.133.031 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.133.036 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.133.037 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.133.038 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.133.038 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.133.039 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.133.040 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.133.042 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.133.043 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.133.043 I llama_model_loader: - kv  24:                                   split.no u16              = 0
0.00.133.044 I llama_model_loader: - kv  25:                                split.count u16              = 6
0.00.133.045 I llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
0.00.133.049 I llama_model_loader: - type  f32:   37 tensors
0.00.133.050 I llama_model_loader: - type q4_K:  108 tensors
0.00.133.051 I llama_model_loader: - type q6_K:   19 tensors
0.00.214.472 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.260.538 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.261.110 I llm_load_vocab: special tokens cache size = 5
0.00.282.500 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.282.517 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.282.518 I llm_load_print_meta: arch             = gemma
0.00.282.519 I llm_load_print_meta: vocab type       = SPM
0.00.282.519 I llm_load_print_meta: n_vocab          = 256000
0.00.282.520 I llm_load_print_meta: n_merges         = 0
0.00.282.520 I llm_load_print_meta: vocab_only       = 0
0.00.282.520 I llm_load_print_meta: n_ctx_train      = 8192
0.00.282.521 I llm_load_print_meta: n_embd           = 2048
0.00.282.521 I llm_load_print_meta: n_layer          = 18
0.00.282.531 I llm_load_print_meta: n_head           = 8
0.00.282.534 I llm_load_print_meta: n_head_kv        = 1
0.00.282.534 I llm_load_print_meta: n_rot            = 256
0.00.282.534 I llm_load_print_meta: n_swa            = 0
0.00.282.535 I llm_load_print_meta: n_embd_head_k    = 256
0.00.282.535 I llm_load_print_meta: n_embd_head_v    = 256
0.00.282.537 I llm_load_print_meta: n_gqa            = 8
0.00.282.538 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.282.540 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.282.541 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.282.543 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.282.543 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.282.543 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.282.544 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.282.545 I llm_load_print_meta: n_ff             = 16384
0.00.282.546 I llm_load_print_meta: n_expert         = 0
0.00.282.546 I llm_load_print_meta: n_expert_used    = 0
0.00.282.546 I llm_load_print_meta: causal attn      = 1
0.00.282.547 I llm_load_print_meta: pooling type     = 0
0.00.282.547 I llm_load_print_meta: rope type        = 2
0.00.282.547 I llm_load_print_meta: rope scaling     = linear
0.00.282.549 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.282.550 I llm_load_print_meta: freq_scale_train = 1
0.00.282.550 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.282.550 I llm_load_print_meta: rope_finetuned   = unknown
0.00.282.551 I llm_load_print_meta: ssm_d_conv       = 0
0.00.282.551 I llm_load_print_meta: ssm_d_inner      = 0
0.00.282.551 I llm_load_print_meta: ssm_d_state      = 0
0.00.282.551 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.282.552 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.282.554 I llm_load_print_meta: model type       = 2B
0.00.282.555 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.282.556 I llm_load_print_meta: model params     = 2.51 B
0.00.282.556 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.282.557 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.282.557 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.282.557 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.282.558 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.282.558 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.282.558 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.282.559 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.282.559 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.282.559 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.282.559 I llm_load_print_meta: max token length = 93
0.00.342.035 I llm_load_tensors:   CPU_Mapped model buffer size =   604.15 MiB
0.00.342.042 I llm_load_tensors:   CPU_Mapped model buffer size =   185.62 MiB
0.00.342.043 I llm_load_tensors:   CPU_Mapped model buffer size =   221.61 MiB
0.00.342.044 I llm_load_tensors:   CPU_Mapped model buffer size =   185.89 MiB
0.00.342.044 I llm_load_tensors:   CPU_Mapped model buffer size =   187.86 MiB
0.00.342.045 I llm_load_tensors:   CPU_Mapped model buffer size =   163.85 MiB
.............................................................
0.00.347.245 I llama_new_context_with_model: n_seq_max     = 1
0.00.347.251 I llama_new_context_with_model: n_ctx         = 4096
0.00.347.252 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.347.252 I llama_new_context_with_model: n_batch       = 2048
0.00.347.253 I llama_new_context_with_model: n_ubatch      = 512
0.00.347.253 I llama_new_context_with_model: flash_attn    = 0
0.00.347.255 I llama_new_context_with_model: freq_base     = 10000.0
0.00.347.256 I llama_new_context_with_model: freq_scale    = 1
0.00.347.257 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.347.277 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.361.506 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.361.519 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.361.611 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.362.852 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.362.857 I llama_new_context_with_model: graph nodes  = 601
0.00.362.858 I llama_new_context_with_model: graph splits = 1
0.00.362.861 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.362.861 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.438.258 I main: llama threadpool init, n_threads = 4
0.00.438.274 I 
0.00.438.350 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.438.353 I 
0.00.438.387 I sampler seed: 3011519637
0.00.438.399 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.438.415 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.438.418 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.438.419 I 
 seconded

I am unable to access your question as you have not provided me with the question. Please provide me with the question so I can assist you.

0.02.027.758 I llama_perf_sampler_print:    sampling time =       5.06 ms /    33 runs   (    0.15 ms per token,  6524.32 tokens per second)
0.02.027.760 I llama_perf_context_print:        load time =     437.47 ms
0.02.027.761 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.02.027.763 I llama_perf_context_print:        eval time =    1570.67 ms /    32 runs   (   49.08 ms per token,    20.37 tokens per second)
0.02.027.763 I llama_perf_context_print:       total time =    1589.51 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-quantize --allow-requantize /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf Q4_K
main: build = 4412 (a5942f0e)
main: built with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
main: quantizing '/mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf' to '/mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf' as Q4_K
llama_model_loader: additional 5 GGUFs metadata loaded.
llama_model_loader: loaded meta data with 27 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf (version GGUF V3 (latest))
llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
llama_model_loader: - kv   0:                       general.architecture str              = gemma
llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
llama_model_loader: - kv  11:                          general.file_type u32              = 7
llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
llama_model_loader: - kv  23:               general.quantization_version u32              = 2
llama_model_loader: - kv  24:                                   split.no u16              = 0
llama_model_loader: - kv  25:                                split.count u16              = 6
llama_model_loader: - kv  26:                        split.tensors.count i32              = 164
llama_model_loader: - type  f32:   37 tensors
llama_model_loader: - type q8_0:  127 tensors
[   1/ 164]                   output_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   2/ 164]                    token_embd.weight - [ 2048, 256000,     1,     1], type =   q8_0, converting to q6_K .. size =   531.25 MiB ->   410.16 MiB
[   3/ 164]                  blk.0.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[   4/ 164]               blk.0.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[   5/ 164]             blk.0.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   6/ 164]                  blk.0.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[   7/ 164]                  blk.0.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[   8/ 164]                blk.0.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[   9/ 164]                blk.0.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  10/ 164]                blk.0.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  11/ 164]                  blk.0.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  12/ 164]                  blk.1.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  13/ 164]               blk.1.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  14/ 164]             blk.1.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  15/ 164]                  blk.1.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  16/ 164]                  blk.1.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  17/ 164]                blk.1.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  18/ 164]                blk.1.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  19/ 164]                blk.1.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  20/ 164]                  blk.1.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  21/ 164]                  blk.2.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  22/ 164]               blk.2.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  23/ 164]             blk.2.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  24/ 164]                  blk.2.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  25/ 164]                  blk.2.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  26/ 164]                blk.2.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  27/ 164]                blk.2.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  28/ 164]                blk.2.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  29/ 164]                  blk.2.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  30/ 164]                  blk.3.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  31/ 164]               blk.3.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  32/ 164]             blk.3.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  33/ 164]                  blk.3.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  34/ 164]                  blk.3.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  35/ 164]                blk.3.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  36/ 164]                blk.3.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  37/ 164]                blk.3.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  38/ 164]                  blk.3.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  39/ 164]                  blk.4.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  40/ 164]               blk.4.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  41/ 164]             blk.4.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  42/ 164]                  blk.4.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  43/ 164]                  blk.4.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  44/ 164]                blk.4.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  45/ 164]                blk.4.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  46/ 164]                blk.4.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  47/ 164]                  blk.4.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  48/ 164]                  blk.5.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  49/ 164]               blk.5.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  50/ 164]             blk.5.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  51/ 164]                  blk.5.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  52/ 164]                  blk.5.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  53/ 164]                blk.5.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  54/ 164]                blk.5.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  55/ 164]                blk.5.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  56/ 164]                  blk.5.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  57/ 164]                  blk.6.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  58/ 164]               blk.6.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  59/ 164]             blk.6.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  60/ 164]                  blk.6.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  61/ 164]                  blk.6.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  62/ 164]                blk.6.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  63/ 164]                blk.6.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  64/ 164]                blk.6.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  65/ 164]                  blk.6.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  66/ 164]                  blk.7.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  67/ 164]               blk.7.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  68/ 164]             blk.7.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  69/ 164]                  blk.7.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  70/ 164]                  blk.7.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  71/ 164]                blk.7.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  72/ 164]                blk.7.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  73/ 164]                blk.7.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  74/ 164]                  blk.7.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  75/ 164]                  blk.8.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  76/ 164]               blk.8.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  77/ 164]             blk.8.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  78/ 164]                  blk.8.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  79/ 164]                  blk.8.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  80/ 164]                blk.8.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  81/ 164]                blk.8.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  82/ 164]                blk.8.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  83/ 164]                  blk.8.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  84/ 164]                  blk.9.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  85/ 164]               blk.9.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  86/ 164]             blk.9.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  87/ 164]                  blk.9.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  88/ 164]                  blk.9.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  89/ 164]                blk.9.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  90/ 164]                blk.9.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  91/ 164]                blk.9.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  92/ 164]                  blk.9.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[  93/ 164]                 blk.10.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[  94/ 164]              blk.10.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[  95/ 164]            blk.10.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  96/ 164]                 blk.10.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[  97/ 164]                 blk.10.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[  98/ 164]               blk.10.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[  99/ 164]               blk.10.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 100/ 164]               blk.10.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 101/ 164]                 blk.10.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 102/ 164]                 blk.11.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 103/ 164]              blk.11.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 104/ 164]            blk.11.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 105/ 164]                 blk.11.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 106/ 164]                 blk.11.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 107/ 164]               blk.11.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 108/ 164]               blk.11.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 109/ 164]               blk.11.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 110/ 164]                 blk.11.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 111/ 164]                 blk.12.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 112/ 164]              blk.12.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 113/ 164]            blk.12.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 114/ 164]                 blk.12.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 115/ 164]                 blk.12.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 116/ 164]               blk.12.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 117/ 164]               blk.12.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 118/ 164]               blk.12.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 119/ 164]                 blk.12.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 120/ 164]                 blk.13.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 121/ 164]              blk.13.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 122/ 164]            blk.13.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 123/ 164]                 blk.13.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 124/ 164]                 blk.13.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 125/ 164]               blk.13.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 126/ 164]               blk.13.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 127/ 164]               blk.13.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 128/ 164]                 blk.13.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 129/ 164]                 blk.14.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 130/ 164]              blk.14.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 131/ 164]            blk.14.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 132/ 164]                 blk.14.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 133/ 164]                 blk.14.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 134/ 164]               blk.14.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 135/ 164]               blk.14.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 136/ 164]               blk.14.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 137/ 164]                 blk.14.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 138/ 164]                 blk.15.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 139/ 164]              blk.15.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 140/ 164]            blk.15.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 141/ 164]                 blk.15.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 142/ 164]                 blk.15.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 143/ 164]               blk.15.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 144/ 164]               blk.15.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 145/ 164]               blk.15.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 146/ 164]                 blk.15.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 147/ 164]                 blk.16.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 148/ 164]              blk.16.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 149/ 164]            blk.16.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 150/ 164]                 blk.16.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 151/ 164]                 blk.16.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 152/ 164]               blk.16.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 153/ 164]               blk.16.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 154/ 164]               blk.16.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 155/ 164]                 blk.16.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 156/ 164]                 blk.17.attn_k.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q4_K .. size =     0.53 MiB ->     0.28 MiB
[ 157/ 164]              blk.17.attn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 158/ 164]            blk.17.attn_output.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 159/ 164]                 blk.17.attn_q.weight - [ 2048,  2048,     1,     1], type =   q8_0, converting to q4_K .. size =     4.25 MiB ->     2.25 MiB
[ 160/ 164]                 blk.17.attn_v.weight - [ 2048,   256,     1,     1], type =   q8_0, converting to q6_K .. size =     0.53 MiB ->     0.41 MiB
[ 161/ 164]               blk.17.ffn_down.weight - [16384,  2048,     1,     1], type =   q8_0, converting to q6_K .. size =    34.00 MiB ->    26.25 MiB
[ 162/ 164]               blk.17.ffn_gate.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
[ 163/ 164]               blk.17.ffn_norm.weight - [ 2048,     1,     1,     1], type =    f32, size =    0.008 MB
[ 164/ 164]                 blk.17.ffn_up.weight - [ 2048, 16384,     1,     1], type =   q8_0, converting to q4_K .. size =    34.00 MiB ->    18.00 MiB
llama_model_quantize_internal: model size  =  2539.66 MB
llama_model_quantize_internal: quant size  =  1548.98 MB

main: quantize time = 40220.52 ms
main:    total time = 40220.52 ms
+ echo PASS
PASS
+ echo

+ /home/ggml/work/llama.cpp/build-ci-release/bin/llama-cli --model /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf --n-predict 32
0.00.000.566 I build: 4412 (a5942f0e) with cc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 for x86_64-linux-gnu
0.00.000.761 I main: llama backend init
0.00.000.768 I main: load the model and apply lora adapter, if any
0.00.021.409 I llama_model_loader: loaded meta data with 24 key-value pairs and 164 tensors from /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf (version GGUF V3 (latest))
0.00.021.425 I llama_model_loader: Dumping metadata keys/values. Note: KV overrides do not apply in this output.
0.00.021.435 I llama_model_loader: - kv   0:                       general.architecture str              = gemma
0.00.021.436 I llama_model_loader: - kv   1:                               general.name str              = gemma-1.1-2b-it
0.00.021.439 I llama_model_loader: - kv   2:                       gemma.context_length u32              = 8192
0.00.021.440 I llama_model_loader: - kv   3:                     gemma.embedding_length u32              = 2048
0.00.021.440 I llama_model_loader: - kv   4:                          gemma.block_count u32              = 18
0.00.021.441 I llama_model_loader: - kv   5:                  gemma.feed_forward_length u32              = 16384
0.00.021.441 I llama_model_loader: - kv   6:                 gemma.attention.head_count u32              = 8
0.00.021.442 I llama_model_loader: - kv   7:              gemma.attention.head_count_kv u32              = 1
0.00.021.448 I llama_model_loader: - kv   8:     gemma.attention.layer_norm_rms_epsilon f32              = 0.000001
0.00.021.449 I llama_model_loader: - kv   9:                 gemma.attention.key_length u32              = 256
0.00.021.449 I llama_model_loader: - kv  10:               gemma.attention.value_length u32              = 256
0.00.021.450 I llama_model_loader: - kv  11:                          general.file_type u32              = 15
0.00.021.451 I llama_model_loader: - kv  12:                       tokenizer.ggml.model str              = llama
0.00.049.112 I llama_model_loader: - kv  13:                      tokenizer.ggml.tokens arr[str,256000]  = ["<pad>", "<eos>", "<bos>", "<unk>", ...
0.00.124.727 I llama_model_loader: - kv  14:                      tokenizer.ggml.scores arr[f32,256000]  = [0.000000, 0.000000, 0.000000, 0.0000...
0.00.131.657 I llama_model_loader: - kv  15:                  tokenizer.ggml.token_type arr[i32,256000]  = [3, 3, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, ...
0.00.131.663 I llama_model_loader: - kv  16:                tokenizer.ggml.bos_token_id u32              = 2
0.00.131.664 I llama_model_loader: - kv  17:                tokenizer.ggml.eos_token_id u32              = 1
0.00.131.665 I llama_model_loader: - kv  18:            tokenizer.ggml.unknown_token_id u32              = 3
0.00.131.665 I llama_model_loader: - kv  19:            tokenizer.ggml.padding_token_id u32              = 0
0.00.131.666 I llama_model_loader: - kv  20:               tokenizer.ggml.add_bos_token bool             = true
0.00.131.667 I llama_model_loader: - kv  21:               tokenizer.ggml.add_eos_token bool             = false
0.00.131.669 I llama_model_loader: - kv  22:                    tokenizer.chat_template str              = {{ bos_token }}{% if messages[0]['rol...
0.00.131.669 I llama_model_loader: - kv  23:               general.quantization_version u32              = 2
0.00.131.673 I llama_model_loader: - type  f32:   37 tensors
0.00.131.674 I llama_model_loader: - type q4_K:  108 tensors
0.00.131.675 I llama_model_loader: - type q6_K:   19 tensors
0.00.206.706 W llm_load_vocab: control-looking token:    107 '<end_of_turn>' was not control-type; this is probably a bug in the model. its type will be overridden
0.00.244.489 W llm_load_vocab: special_eos_id is not in special_eog_ids - the tokenizer config may be incorrect
0.00.244.945 I llm_load_vocab: special tokens cache size = 5
0.00.265.984 I llm_load_vocab: token to piece cache size = 1.6014 MB
0.00.266.001 I llm_load_print_meta: format           = GGUF V3 (latest)
0.00.266.002 I llm_load_print_meta: arch             = gemma
0.00.266.003 I llm_load_print_meta: vocab type       = SPM
0.00.266.003 I llm_load_print_meta: n_vocab          = 256000
0.00.266.004 I llm_load_print_meta: n_merges         = 0
0.00.266.004 I llm_load_print_meta: vocab_only       = 0
0.00.266.004 I llm_load_print_meta: n_ctx_train      = 8192
0.00.266.005 I llm_load_print_meta: n_embd           = 2048
0.00.266.005 I llm_load_print_meta: n_layer          = 18
0.00.266.017 I llm_load_print_meta: n_head           = 8
0.00.266.019 I llm_load_print_meta: n_head_kv        = 1
0.00.266.019 I llm_load_print_meta: n_rot            = 256
0.00.266.019 I llm_load_print_meta: n_swa            = 0
0.00.266.020 I llm_load_print_meta: n_embd_head_k    = 256
0.00.266.020 I llm_load_print_meta: n_embd_head_v    = 256
0.00.266.022 I llm_load_print_meta: n_gqa            = 8
0.00.266.024 I llm_load_print_meta: n_embd_k_gqa     = 256
0.00.266.025 I llm_load_print_meta: n_embd_v_gqa     = 256
0.00.266.026 I llm_load_print_meta: f_norm_eps       = 0.0e+00
0.00.266.028 I llm_load_print_meta: f_norm_rms_eps   = 1.0e-06
0.00.266.028 I llm_load_print_meta: f_clamp_kqv      = 0.0e+00
0.00.266.029 I llm_load_print_meta: f_max_alibi_bias = 0.0e+00
0.00.266.029 I llm_load_print_meta: f_logit_scale    = 0.0e+00
0.00.266.031 I llm_load_print_meta: n_ff             = 16384
0.00.266.031 I llm_load_print_meta: n_expert         = 0
0.00.266.031 I llm_load_print_meta: n_expert_used    = 0
0.00.266.032 I llm_load_print_meta: causal attn      = 1
0.00.266.032 I llm_load_print_meta: pooling type     = 0
0.00.266.032 I llm_load_print_meta: rope type        = 2
0.00.266.033 I llm_load_print_meta: rope scaling     = linear
0.00.266.034 I llm_load_print_meta: freq_base_train  = 10000.0
0.00.266.035 I llm_load_print_meta: freq_scale_train = 1
0.00.266.036 I llm_load_print_meta: n_ctx_orig_yarn  = 8192
0.00.266.036 I llm_load_print_meta: rope_finetuned   = unknown
0.00.266.036 I llm_load_print_meta: ssm_d_conv       = 0
0.00.266.037 I llm_load_print_meta: ssm_d_inner      = 0
0.00.266.037 I llm_load_print_meta: ssm_d_state      = 0
0.00.266.037 I llm_load_print_meta: ssm_dt_rank      = 0
0.00.266.037 I llm_load_print_meta: ssm_dt_b_c_rms   = 0
0.00.266.039 I llm_load_print_meta: model type       = 2B
0.00.266.040 I llm_load_print_meta: model ftype      = Q4_K - Medium
0.00.266.041 I llm_load_print_meta: model params     = 2.51 B
0.00.266.042 I llm_load_print_meta: model size       = 1.51 GiB (5.18 BPW) 
0.00.266.042 I llm_load_print_meta: general.name     = gemma-1.1-2b-it
0.00.266.043 I llm_load_print_meta: BOS token        = 2 '<bos>'
0.00.266.043 I llm_load_print_meta: EOS token        = 1 '<eos>'
0.00.266.044 I llm_load_print_meta: EOT token        = 107 '<end_of_turn>'
0.00.266.044 I llm_load_print_meta: UNK token        = 3 '<unk>'
0.00.266.044 I llm_load_print_meta: PAD token        = 0 '<pad>'
0.00.266.045 I llm_load_print_meta: LF token         = 227 '<0x0A>'
0.00.266.045 I llm_load_print_meta: EOG token        = 1 '<eos>'
0.00.266.045 I llm_load_print_meta: EOG token        = 107 '<end_of_turn>'
0.00.266.046 I llm_load_print_meta: max token length = 93
0.00.324.644 I llm_load_tensors:   CPU_Mapped model buffer size =  1548.98 MiB
................................................................
0.00.329.777 I llama_new_context_with_model: n_seq_max     = 1
0.00.329.783 I llama_new_context_with_model: n_ctx         = 4096
0.00.329.784 I llama_new_context_with_model: n_ctx_per_seq = 4096
0.00.329.784 I llama_new_context_with_model: n_batch       = 2048
0.00.329.785 I llama_new_context_with_model: n_ubatch      = 512
0.00.329.785 I llama_new_context_with_model: flash_attn    = 0
0.00.329.787 I llama_new_context_with_model: freq_base     = 10000.0
0.00.329.788 I llama_new_context_with_model: freq_scale    = 1
0.00.329.789 W llama_new_context_with_model: n_ctx_per_seq (4096) < n_ctx_train (8192) -- the full capacity of the model will not be utilized
0.00.329.809 I llama_kv_cache_init: kv_size = 4096, offload = 1, type_k = 'f16', type_v = 'f16', n_layer = 18, can_shift = 1
0.00.344.499 I llama_kv_cache_init:        CPU KV buffer size =    72.00 MiB
0.00.344.520 I llama_new_context_with_model: KV self size  =   72.00 MiB, K (f16):   36.00 MiB, V (f16):   36.00 MiB
0.00.344.612 I llama_new_context_with_model:        CPU  output buffer size =     0.98 MiB
0.00.345.842 I llama_new_context_with_model:        CPU compute buffer size =   504.00 MiB
0.00.345.850 I llama_new_context_with_model: graph nodes  = 601
0.00.345.850 I llama_new_context_with_model: graph splits = 1
0.00.345.853 I common_init_from_params: setting dry_penalty_last_n to ctx_size = 4096
0.00.345.854 W common_init_from_params: warming up the model with an empty run - please wait ... (--no-warmup to disable)
0.00.419.864 I main: llama threadpool init, n_threads = 4
0.00.419.880 I 
0.00.419.958 I system_info: n_threads = 4 (n_threads_batch = 4) / 8 | CPU : SSE3 = 1 | SSSE3 = 1 | AVX = 1 | AVX2 = 1 | F16C = 1 | FMA = 1 | AVX512 = 1 | AVX512_VBMI = 1 | AVX512_VNNI = 1 | LLAMAFILE = 1 | OPENMP = 1 | AARCH64_REPACK = 1 | 
0.00.419.962 I 
0.00.419.997 I sampler seed: 2215105986
0.00.420.009 I sampler params: 
	repeat_last_n = 64, repeat_penalty = 1.000, frequency_penalty = 0.000, presence_penalty = 0.000
	dry_multiplier = 0.000, dry_base = 1.750, dry_allowed_length = 2, dry_penalty_last_n = 4096
	top_k = 40, top_p = 0.950, min_p = 0.050, xtc_probability = 0.000, xtc_threshold = 0.100, typical_p = 1.000, temp = 0.800
	mirostat = 0, mirostat_lr = 0.100, mirostat_ent = 5.000
0.00.420.020 I sampler chain: logits -> logit-bias -> penalties -> dry -> top-k -> typical -> top-p -> min-p -> xtc -> temp-ext -> dist 
0.00.420.023 I generate: n_ctx = 4096, n_batch = 2048, n_predict = 32, n_keep = 1
0.00.420.023 I 
 increasities from the Greek tragedy Antigone.

**Antigone's Speech:**

"O brothers, I have known the fate that awaits us all

0.01.996.093 I llama_perf_sampler_print:    sampling time =       5.17 ms /    33 runs   (    0.16 ms per token,  6389.16 tokens per second)
0.01.996.095 I llama_perf_context_print:        load time =     419.08 ms
0.01.996.096 I llama_perf_context_print: prompt eval time =       0.00 ms /     1 tokens (    0.00 ms per token,      inf tokens per second)
0.01.996.098 I llama_perf_context_print:        eval time =    1557.46 ms /    32 runs   (   48.67 ms per token,    20.55 tokens per second)
0.01.996.098 I llama_perf_context_print:       total time =    1576.24 ms /    33 tokens
+ echo PASS
PASS
+ echo

+ rm -f /mnt/llama.cpp/models/quantize/ggml-model-split-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-split-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00001-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00002-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00003-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00004-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00005-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-00006-of-00006.gguf /mnt/llama.cpp/models/quantize/ggml-model-requant-merge.gguf

real	1m27.295s
user	10m24.088s
sys	0m7.010s
